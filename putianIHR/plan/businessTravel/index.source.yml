getData_control61_U1Nctq: ''
doAction_uiControl60_8nHrMb: |
  var type = data.eventType;
  if (type == "back") {
    // elem.ownerDocument.defaultView.close();
    // ysp.runtime.Model.setForceMatchModels(['checkMyInfo']); 
    // if (ysp.appMain.isIOS() || ysp.appMain.isAndroid()) {
    //   top.EAPI.closeWindow();
    // } else {
    //   ysp.appMain.back();
    // } // ysp.appMain.back();
    //   var backVal = ysp.customHelper.tab;
    //   if (backVal == "menu") {
    //     ysp.appMain.back();
    //     backVal = null;
    //   } else {
    //     top.EAPI.closeWindow();
    //   }
    var backVal = ysp.customHelper.tab;

    if (backVal == "menu" && ysp.customHelper.innerBack == null) {
      ysp.appMain.back();
      backVal = null;
      ysp.customHelper.indexName = null;
    } else if (backVal == "menu" && ysp.customHelper.innerBack == "returnBack") {
      ysp.appMain.back();
      ysp.customHelper.innerBack = null;
      ysp.customHelper.indexName = null;
    } else if (backVal == null && ysp.customHelper.innerBack == "returnBack") {
      ysp.appMain.back();
      ysp.customHelper.innerBack = null;
      ysp.customHelper.indexName = null;
    } else {
      ysp.customHelper.indexName = null;
      top.EAPI.closeWindow();
    }
  }
getTemplate_uiControl60_8nHrMb: "import {Component} from 'react'; \nimport {CustomHeader} from 'ysp-custom-components';\nexport default class extends Component{\n  render () {\n    var _this=this;\n    return(\n      <div>\n      \t<CustomHeader \n           data={{centerText:\"公出、出差申请\",rightText:\"\"}} \n           backIsShow={true} \n           back={()=>{ \n              let handler = _this.props.customHandler;\n              if (handler) {\n                handler({\n                  eventType: 'back'\n                });\n              }\n           }} \n           filterIsShow={false}\n        \t />\n      \t<div style={{height:\"2.7rem\"}}></div>\n      </div>\n      )\n    }\n}"
getData_control67_B20vHF: |
  if (!elem) {
    return;
  }
  var data = {
    vall: "请输入请假事由",
    pserror: ""
  }; // var data = "请输入请假事由";
  data.vall = elem.value;
  data.pserror = elem.getAttribute("class");
  return data;
doAction_uiControl66_G5ofzc: |
  if (data.eventType == 'change') {
    var data = data.dataCustom;
    elem.value = data;
    elem.dispatchEvent(new Event('change'));
    $(elem.ownerDocument.querySelectorAll("[dir='ltr']")[0]).find("input").focus();
  }
getTemplate_uiControl66_G5ofzc: "\nimport {Component} from 'react';\n\nexport default class extends React.Component{\n\n  render(){\n    var data = this.props.customData;\n    return (\n<div className=\"ysp-bottom-default\">\n          <div className=\"ysp-con-box ysp-reason ysp-line-bottom\">\n            <div className=\"ysp-big-tit\"><em className=\"star\">*</em>原因/事由</div>\n           {data&&data.pserror? <ATextarea  className={\"reason \"+data.pserror} placeholder=\"请输入请假事由\" value={data.vall} onBlur={(e)=>{\n            var handler=this.props.customHandler;\n            if(handler){\n              handler({\n                data:e.target.value,\n            \teventType:\"change\"\n              })\n            }\n           }} ></ATextarea>:\"\"}\n        </div>\n  </div>\n    )\n  }\n};"
getData_control65_Sc4ES5: |
  //附件上传弹窗
  if (!elem) {
    return;
  }
  var data = [];
  var annexName = elem.querySelector("input[title='浏览']");
  if (annexName && annexName.value != "") {
    data.push(annexName.value.match(/([^<>/\\\|:""\*\?]+)\.\w+$/g));
  } else {
    data = ["未选中任何文件"];
  }
  return data;
doAction_uiControl64_EgB4hW: |
  if (data.eventType == "selclick") {
    var d = data.dataCustom;
    elem.querySelector("input[type='file']").click();
  } else if (data.eventType == "upclick") {
    var d = data.dataCustom;
    var ipt1 = elem.querySelectorAll(".PSPUSHBUTTON")[0].querySelector("input");
    ipt1.click();
  } else if (data.eventType == "cancelclick") {
    var d = data.dataCustom;
    var ipt2 = elem.querySelectorAll(".PSPUSHBUTTON")[2].querySelector("input");
    ipt2.click();
  }
getTemplate_uiControl64_EgB4hW: |-
  import {Component} from 'react';

  export default class extends React.Component{
      selClick(e) {
      // var handler = this.props.customHandler;
      // if(handler){
      //   handler({
      //     eventType:"selclick"
      //   })
      // }
        e.target.ownerDocument.querySelector("[type='fileUpload']").click();
    }
    upClick(e) {
      var handler = this.props.customHandler;
      if(handler){
        handler({
          eventType:"upclick"
        })
      }
    }
      cancelClick(e) {
      var handler = this.props.customHandler;
      if(handler){
        handler({
          eventType:"cancelclick"
        })
      }
    }

    render(){
      var data = this.props.customData;
      var _this = this;
    return(<div>
      {data && data.length>0?
          <div className="ysp-pop-box">
            <div className="ysp-pop-mask"></div>
            <div className="ysp-pop-con">
          <h4>文件附件</h4>
          <div className="annex-name">{data[0]}</div>
         <p onClick={_this.selClick.bind(_this)} className="up-annex">上传附件</p>
          <button className="pop-two-btn" onClick={_this.upClick.bind(_this)}>上载</button><button className="pop-two-btn" onClick={_this.cancelClick.bind(_this)}>取消</button>
        </div>
        </div>
          :
        <div style={{display:"none"}}></div>
        }
      </div>)
    }
  };
getData_control69_rsRMlX: |
  ;//提示弹框
  if (elem && elem.getAttribute("role") == "alertdialog") {
    return ysp.customHelper.alert(elem);
  } else {
    return;
  }
doAction_uiControl68_uxwnei: |
  if (data.eventType == "btnClick") {
    if (data.dataCustom == "sure") {
      elem.querySelector("input[value='确定']").click();
      ysp.appMain.back();
    } else {
      elem.querySelector("input[value='取消']").click();
      ysp.appMain.back();
    }
  }
getTemplate_uiControl68_uxwnei: "import {Component} from 'react'; \nimport {CustomAlert} from 'ysp-custom-components';\nexport default class extends Component{\n  btnClick(e){\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"btnClick\",\n        data:target.className\n      })\n    }\n  }\n  render () {\n    var _this=this;\n    var data=this.props.customData;\n    return(\n      <div>\n      \t{data? <CustomAlert\n           data={data}\n          btnClick={_this.btnClick.bind(_this)}\n        />:<div></div>}\n      </div>\n      )\n    }\n}"
getData_control75_XqxNmG: |
  //附件展示
  if (!elem) {
    return;
  }
  var data = {
    name: [],
    leng: ""
  };
  var th = elem.querySelectorAll("th");
  [].forEach.call(th, function (item, index) {
    if (item.textContent == "更新者") {
      var tr = item.parentElement.parentElement.querySelectorAll("tr[id]");
      [].forEach.call(tr, function (d, i) {
        var td = d.querySelectorAll("td")[1].textContent.trim();
        data.name.push(td);
      });
      data.leng = tr && tr.length;
    }
  });
  return data;
doAction_uiControl74_3xXdrR: |
  if (data.eventType == "addFile") {
    // if (ysp.appMain.isAndroid()) {
    //   window.yspCheckIn.isRefresh(true);
    // }
    var ind = parseInt(data.dataCustom);
    var th = elem.querySelectorAll("th");
    [].forEach.call(th, function (item, index) {
      if (item.textContent == "更新者") {
        var tr = item.parentElement.parentElement.querySelectorAll("tr[id]");
        tr[ind - 1].querySelectorAll("td")[3].querySelector("input").click();
      }
    });
  } else if (data.eventType == "autoClick") {
    var ind = parseInt(data.dataCustom);
    var th = elem.querySelectorAll("th");
    [].forEach.call(th, function (item, index) {
      if (item.textContent == "更新者") {
        var tr = item.parentElement.parentElement.querySelectorAll("tr[id]");
        tr[ind - 1].querySelectorAll("td")[4].querySelector("a").click();
      }
    });
  } else if (data.eventType == "delete") {
    var ind = parseInt(data.dataCustom);
    var th = elem.querySelectorAll("th");
    [].forEach.call(th, function (item, index) {
      if (item.textContent == "更新者") {
        var tr = item.parentElement.parentElement.querySelectorAll("tr[id]");
        tr[ind].querySelectorAll("td")[6].querySelector("a").click();
      }
    });
  }
getTemplate_uiControl74_3xXdrR: "import {Component} from 'react'; \nexport default class extends Component{\n  componentDidUpdate(){\n    if(this.props.customData.name[0]==\"\"&&this.props.customData.leng==1){\n      \n    }else{\n      this.refs.autoClick.click()\n    }\n    \n  }\n  addFile(e){\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"addFile\",\n        data:target.dataset.index\n      })\n    }\n  }\n  autoClick(e){\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"autoClick\",\n        data:target.dataset.index\n      })\n    }\n  }\n  delete(e){\n    var target=e.target;\n    var handler=this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:\"delete\",\n        data:target.dataset.index\n      })\n    }\n  }\n  render(){\n    var data=this.props.customData;\n    var _this=this;\n    return(\n    \t<div className=\"ysp-con-box annex-box ysp-bottom-default\">\n        <div className=\"annex-tit\">附件</div>\n        <div className=\"annex-conent\">\n        \t<div className=\"annex-add\" onClick={_this.addFile.bind(_this)} data-index={data&&data.leng}>+</div>\n          {data&&data.name&&data.name.map(function(d,i){\n              return(\n                <div className=\"annex-listItem\">\n                  {d==\"\"? <div></div>:\n                    <div>\n                      <div className=\"annex-item\">\n                        <div className={d.indexOf(\"jpg\"||\"png\")? \"pic\": d.indexOf(\"xl\")? \"excel\":d.indexOf(\"doc\")? \"doc\":d.indexOf(\"ppt\")? \"ppt\": d.indexOf(\"pdf\")? \"pdf\": d.indexOf(\"zip\")? \"zip\": d.indexOf(\"rar\")? \"rar\":\"default\"}></div>\n                        <i className=\"delete-btn\" onClick={_this.delete.bind(_this)} data-index={i}>X</i>\n                      </div>\n                      <div className=\"fileName\">{d}</div>\n                    </div>\n                  }\n                </div>\n\n              )\n          })}\n        </div>\n        <div ref=\"autoClick\" onClick={_this.autoClick.bind(_this)} data-index={data&&data.leng}></div>\n      </div>\n    )\n  }\n}"
getData_control45_b9KvxZ: |
  if (!elem) {
    return;
  }
  var data = {
    vall: [],
    grey: []
  };
  var save = elem.querySelector("#HPS_AWE_WRK_SAVE_BTN");
  var sub = elem.querySelector("#HPS_AWE_WRK_SUBMIT_BTN");
  if (save) {
    data.vall.push(save.value);

    if (save.disabled == true) {
      data.grey.push("disabled");
    } else {
      data.grey.push("");
    }
  }
  if (sub) {
    data.vall.push(sub.value);

    if (sub.disabled == true) {
      data.grey.push("disabled");
    } else {
      data.grey.push("");
    }
  }
  return data;
doAction_uiControl44_UcC6BV: |
  if (data.eventType == "click1") {
    var data = data.customData;
    elem.querySelector("#HPS_AWE_WRK_SUBMIT_BTN").click();
  } else if (data.eventType == "click2") {
    elem.querySelector("#HPS_AWE_WRK_SAVE_BTN").click();
  }
getTemplate_uiControl44_UcC6BV: |-
  import {Component} from 'react';

  export default class extends React.Component{
    handlerClick1(e) {
      var handler = this.props.customHandler;
      if(handler){
        handler({
          data:[e.target.className,e.target.value],
          eventType:"click1"
        })
      }
    }
      handlerClick2(e) {
      var handler = this.props.customHandler;
      if(handler){
        handler({
          data:[e.target.className,e.target.value],
          eventType:"click2"
        })
      }
    }

    render(){
      var data = this.props.customData;
      return (
        <div>
          {data&&data.vall && data.vall.length>0?
          <div className="ysp-btn-box">
              <button className={"ysp-sel-btn "+data.grey[1]} onClick={this.handlerClick1.bind(this)}>{data.vall[1]}</button>
          <button className={"ysp-save-btn "+data.grey[0]} onClick={this.handlerClick2.bind(this)}>{data.vall[0]}</button>
          </div>
            :
          <div></div>
          }
        
        </div>
      )
    }
  };
getData_control47_hxrng3: >
  if (elem && elem.querySelector("div[id*='SAVED']") &&
  elem.querySelector("div[id*='SAVED']").style.display == "block") {
    return true;
  } else {
    return;
  }
doAction_uiControl46_tMUlPn: ''
getTemplate_uiControl46_tMUlPn: "import {Component} from \"react\";\nexport default class extends Component{\n  render(){\n    var data=this.props.customData;\n    return(\n    \t<div>\n      \t{data? \n          <div className=\"savedModal\">\n\t\t\t\t\t\t<div className=\"saveContent\">\n            \t<div>√</div>\n              <div>已保存</div>\n            </div>\n          </div>:\n          <div></div>\n        }\n      </div>\n    )\n  }\n}"
getData_control13_LwtVIU: >
  if (!elem) {
    return;
  }

  var data = {
    star: [],
    tit: [],
    con: [],
    pserror: []
  };

  if (elem && elem.querySelector("[dir='ltr']") &&
  elem.querySelector("[dir='ltr']").textContent.indexOf("时长") !== -1) {
    var elem = elem.querySelectorAll("[dir='ltr']")[0].querySelector("[dir='ltr']").querySelector("tbody");
    var titStr = elem.querySelectorAll("th");
    var titCon = elem.querySelectorAll("td");
    var href = elem.ownerDocument.defaultView.location.href;

    if (titStr) {
      [].forEach.call(titStr, function (item, index) {
        //星号
        if (item.querySelector("span")) {
          data.star.push(item.querySelector("span").textContent);
        }

        if (item.querySelector("a")) {
          data.tit.push(item.querySelector("a").textContent);
        }
      });
    }

    if (titCon) {
      [].forEach.call(titCon, function (item, index) {
        var ipt = item.querySelector("input");

        if (ipt) {
          // data.con.push(ipt.value.replace(/\//g, "-"));
          // data.pserror.push(ipt.getAttribute("class"));
          if (ysp.appMain.isIOS() && ipt.getAttribute("id").indexOf("DATE") !== -1 && href.indexOf("192.168.220.110") !== -1) {
            var date = ipt.value.split("/");
            var val = date[2] + "-" + date[1] + "-" + date[0];
            data.con.push(val);
          } else {
            data.con.push(ipt.value.replace(/\//g, "-"));
          }

          data.pserror.push(ipt.getAttribute("class"));
        } else {
          if (item.querySelector("select")) {
            var sel = [];
            var opts = item.querySelectorAll("option");
            [].forEach.call(opts, function (d, i) {
              sel.push(d.textContent);
            });
            data.con.push(sel);
            data.pserror.push(item.querySelector("select").getAttribute("class"));
          } else if (item.querySelector(".PSEDITBOX_DISPONLY")) {
            data.con.push(item.querySelector(".PSEDITBOX_DISPONLY").textContent.replace(/\//g, "-"));
          } else if (item && index != 0) {
            data.con.push(item.textContent.trim(scrollY));
          }
        }
      });
    }

    return data;
  } else {
    return false;
  }
doAction_uiControl13_OC6RU2: >
  var elem =
  elem.querySelectorAll("[dir='ltr']")[0].querySelector("[dir='ltr']").querySelector("tbody");

  if (data.eventType == "timeclick") {
    var data = data.dataCustom;
    var d = data[0];
    var i = data[1];
    var time = elem.querySelectorAll("input")[i];
    time.value = d;
    time.dispatchEvent(new Event("change"));
  } else if (data.eventType == "datechange") {
    var data = data.dataCustom;
    var d = data[0];
    var i = data[1];
    var time = elem.querySelectorAll("input")[i];
    var href = elem.ownerDocument.defaultView.location.href;

    if (ysp.appMain.isIOS() && href.indexOf("192.168.220.110") !== -1) {
      var date = d.split("-");
      time.value = date[2] + "/" + date[1] + "/" + date[0];
    } else {
      time.value = d.replace(/-/g, "/");
    }

    time.click();
    time.dispatchEvent(new Event("change"));
  } else if (data.eventType == "selclick") {
    var d = data.dataCustom;
    d[1] = parseInt(d[1]) - 2;
    elem.querySelectorAll("select")[d[1]].querySelectorAll("option")[d[0]].selected = true;
    elem.querySelectorAll("select")[d[1]].dispatchEvent(new Event("change"));
  } else if (data.eventType == "checkclick") {
    var check = elem.querySelector("input[type='checkbox']");
    check.click();
  }
getTemplate_uiControl13_OC6RU2: "\nimport {Component} from 'react';\n\nexport default class extends React.Component{\n    selClick(e) {\n   var handler=this.props.customHandler;\n    var target=e.target;\n    if(handler){\n      handler({\n        data:[target.selectedIndex,target.dataset.index],\n        eventType:\"selclick\"\n      })\n    }\n  }\n  dateChange(e){\n    var handler=this.props.customHandler;\n     if(handler) {                                 \n       handler({\n         data:[e.target.value,e.target.dataset.index],\n         eventType:'datechange'                         \n       })\n     }\n  }\n\n    timeClick(e) {\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data:[e.target.value,e.target.dataset.index],\n        eventType:\"timeclick\"\n      })\n    }\n  }\n  checkClick(e) {\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n \t\t\t\tdata:[e.target.checked,e.target.dataset.index],\n        eventType:\"checkclick\"\n      })\n    }\n  }\n  render(){\n    var data = this.props.customData;\n    var _this=this;\n    return (\n      <div>\n      {data?\n      <div className=\"ysp-con-box ysp-bottom-default\">\n        \n        {data.tit && data.tit.length>0 && data.tit.map(function(item,index){\n            return(\n              <div className=\"ysp-lists\">\n                <div className=\"ysp-l\"><em className=\"star\">{data.star[index]}</em>{item}</div>\n                <div className=\"ysp-r\">\n                  {data.tit[index] == \"开始日期\" || data.tit[index] ==\"结束日期\"?\n                    <span>\n                      <AInput type=\"date\" onBlur={_this.dateChange.bind(_this)} data-index={index}  value={data.con[index]} className={\"date-time \"+data.pserror[index]}/>\n                      </span>\n                    :data.tit[index] ==\"公出、出差时长\"? <AInput type=\"text\" disabled className={\"clock-time \"+data.pserror[index]} value={data.con[index]}/>:\n                  data.con[index].constructor == Array ?\n                    <select className={\"sel-type \"+ data.pserror[index]} onChange={_this.selClick.bind(_this)} data-index={index}>{data.con[index].map(function(d,i){\n                        return(<option>{d}</option>)\n                      })}</select>\n                    :data.con[index]==\"N\"||data.con[index]==\"Y\"?\n                    <label className=\"switch\"><AInput type=\"checkbox\" onChange={_this.checkClick.bind(_this)}/><span className=\"switch-label\"></span></label>:\n\t\t\t\t\t\t\t\t\t\t <AInput type=\"text\" placeholder=\"请输入\" disabled={index!=(data.con.length-1)? false : true} className={\"clock-time \"+data.pserror[index]} value={data.con[index]} onChange={_this.timeClick.bind(_this)} data-index={index}/>\n                  }\n                  \n                </div>\n       \t\t\t\t</div>\n            )\n          })}\n       \n      </div>\n      :\n      <div>\n      <div className=\"ysp-con-box ysp-bottom-default\">\n          <div className=\"ysp-lists readonly\">\n              <div className=\"ysp-l\">开始日期</div>\n              <div className=\"ysp-r\"><span className=\"ysp-li-con\">请选择</span><i className=\"icon arrow-r\"></i></div>\n       \t\t</div>\n          <div className=\"ysp-lists readonly\">\n              <div className=\"ysp-l\">结束日期</div>\n              <div className=\"ysp-r\"><span className=\"ysp-li-con\">请选择</span><i className=\"icon arrow-r\"></i></div>\n       \t\t</div>\n          <div className=\"ysp-lists readonly\">\n              <div className=\"ysp-l\">开始日期</div>\n              <div className=\"ysp-r\"><span className=\"ysp-li-con\">请选择</span><i className=\"icon arrow-r\"></i></div>\n       \t\t</div>\n          <div className=\"ysp-lists readonly\">\n              <div className=\"ysp-l\"><span className=\"ysp-li-con\">时长(天)</span></div>\n              <div className=\"ysp-r\"><i className=\"icon arrow-r\"></i></div>\n       \t\t</div>\n      </div>       \n         \n      </div>\n      }\n      \n      </div>\n    )\n  }\n};\n"
getData_control59_g8VqUC: >
  if (!elem) {
    return;
  }

  var disabedMask = elem && elem.querySelector("#HPS_AWE_WRK_SUBMIT_BTN") &&
  elem.querySelector("#HPS_AWE_WRK_SUBMIT_BTN").disabled;

  if (elem && disabedMask) {
    return true;
  }
doAction_uiControl80_nIKt1s: ''
getTemplate_uiControl80_nIKt1s: "import {Component} from \"react\";\nexport default class extends Component{\n  render(){\n    var data=this.props.customData;\n    return(\n    \t<div>\n      \t{data? <div className=\"disableMask\">\n      </div>:\"\"}\n      </div>\n    )\n  }\n}"
getData_control108_gUnZPX: |
  if (elem) {
    var loading = elem.querySelector("[id*='processing']").parentElement;

    if (loading && loading.style.display == "block") {
      return true;
    } else {
      return false;
    }
  } else {
    return;
  }
doAction_uiControl111_zZq70V: ''
getTemplate_uiControl111_zZq70V: "import {Component} from 'react';\nexport default class extends Component{\n  render(){\n    var data=this.props.customData;\n    if(data){\n     var div=\n    \t\t<div className=\"tab-loading\"><p>数据加载中...</p></div>\n    \t\n    }else{\n      setTimeout(function(){\n      var div=\n      \t\t<div className=\"tab-loading\"><p>数据加载中...</p></div>\n      \t\n    \t},500)\n    }\n    return(\n    \t<div>{div}</div>\n    )\n  }\n}"
getData_control112_Mio4W6: >
  if (!elem) {
    return;
  }

  if (elem.querySelectorAll("option") && elem.querySelectorAll("option").length
  > 0) {
    var data = {
      con: [],
      select: "",
      pserror: ""
    };
    data.pserror = elem.querySelector("select").getAttribute("class");
    var opts = elem.querySelectorAll("option");
    [].forEach.call(opts, function (item, index) {
      data.con.push(item.textContent.trim());

      if (item.selected) {
        data.select = item.textContent.trim();
      }
    });
  } else {
    var data = [];
    data.push(elem.querySelectorAll("tr")[1].querySelectorAll("td")[1].textContent.trim());
    data.push(elem.querySelectorAll("tr")[1].querySelectorAll("td")[2].textContent.trim());
  }

  return data;
doAction_uiControl115_ZqN2Z2: |
  if (data.eventType == "click") {
    var d = data.dataCustom;
    var options = elem.querySelectorAll("option");

    for (var n = 0; n < options.length; n++) {
      if (options[n].textContent == d) {
        options[n].selected = true;
        elem.querySelector("select").dispatchEvent(new Event("change"));
      }
    }
  } else if (data.eventType == "clickfocus") {
    elem.querySelector("select").dispatchEvent(new Event("focus"));
  }
getTemplate_uiControl115_ZqN2Z2: |-

  import {Component} from 'react';

  export default class extends React.Component{
      selClick(e) {
     var handler=this.props.customHandler;
      var target=e.target;
      if(handler){
        handler({
          data:target.value,
          eventType:"click"
        })
      }
    }
        clickFocus(e) {
     var handler=this.props.customHandler;
      var target=e.target;
      if(handler){
        handler({
          eventType:"clickfocus"
        })
      }
    }
    render(){
      var data = this.props.customData;
      return (
        <div>
        {data && data.con && data.con.length>0?
        <div className="ysp-con-box ysp-bottom-default">
          <div className="ysp-lists">
          <span className="ysp-l ysp-tit"><em className="star">*</em>考勤类型</span>
              <span className="ysp-r"><select className={"sel-type "+data.pserror} onFocus={this.clickFocus.bind(this)} onChange={this.selClick.bind(this)} >{data.con.map(function(item,index){
              return(<option selected={data.select==item? true:false}>{item}</option>)
            })}</select></span>
         </div>
        </div>
        :
        <div className="ysp-con-box ysp-bottom-default">
            <div className="ysp-lists">
            <span className="ysp-l ysp-tit"><em className="star">*</em>{data&&data[0]}</span>
              <span className="ysp-r">{data&&data[1]}</span>
             
            </div>
          </div>
        }
        
        </div>
      )
    }
  };
getData_control42_Nl4wTQ: |
  if (elem) {
    var data = {
      label: "",
      text: ""
    };

    if (elem && elem.querySelector("div[id*='LOCATION$']")) {
      data.text = elem.querySelector("div[id*='LOCATION$']").querySelector("[id*='LOCATION$']").value;
      data.pserror = elem.querySelector("div[id*='LOCATION$']").querySelector("[id*='LOCATION$']").getAttribute("class");
    }

    if (elem && elem.querySelector("label[id*='LOCATION_LBL']")) {
      var txt = elem.querySelector("label[id*='LOCATION_LBL']").textContent;

      if (txt.indexOf("*") !== -1) {
        data.label = txt.replace("*", "");
      } else {
        data.label = txt;
      }
    }

    return data;
  } else {
    return;
  }
doAction_uiControl42_k39rCP: |
  if (data.eventType == 'change') {
    var data = data.dataCustom; // elem.querySelector("textarea[id*='LOCATION']").value = data;
    // elem.querySelector("textarea[id*='LOCATION']").dispatchEvent(new Event('change'));

    elem.querySelector("div[id*='LOCATION$']").querySelector("[id*='LOCATION$']").value = data;
    elem.querySelector("div[id*='LOCATION$']").querySelector("[id*='LOCATION$']").dispatchEvent(new Event('change'));
  }
getTemplate_uiControl42_k39rCP: "\nimport {Component} from 'react';\n\nexport default class extends React.Component{\n  render(){\n    var data = this.props.customData;\n    var _this=this;\n    return (\n      <div className=\"ysp-bottom-default\">\n        <div className=\"ysp-con-box ysp-reason ysp-line-bottom\">\n          {data&&data.label? <div className=\"ysp-big-tit\"><em className=\"star\">*</em>{data.label}</div>:\"\"}\n          {data&&data.label?<ATextarea className={\"reason \"+data.pserror}  placeholder={\"请输入\"+data.label} value={data.text} onBlur={(e)=>{\n          var handler=this.props.customHandler;\n          if(handler){\n            handler({\n              data:e.target.value,\n            \teventType:\"change\"\n            })\n          }\n          }} ></ATextarea>:\"\"}\n        </div>\n      </div>\n    )\n  }\n};\n"
