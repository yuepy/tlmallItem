getData_control274_87SuoT: >-
  if (!elem) {
    return;
  }

  var data = {};

  var lis =
  elem.ownerDocument.querySelector('.breadcrumb').querySelectorAll('li');

  var back = lis.length > 1 && lis[1].textContent ? true : false; // var back =
  lis.length > 1 && lis[1].textContent.indexOf('全国') != -1 ? true : false;

  data.back = back;

  /****************筛选*********************/

  var orderLogic = elem.ownerDocument.querySelector('#orderLogic') &&
  elem.ownerDocument.querySelector('#orderLogic').querySelectorAll('option');

  if (orderLogic) {
    data.orderLogic={};
    data.orderLogic.orderLogic = [];
    data.orderLogic.selectIndex = elem.ownerDocument.querySelector('#orderLogic').selectedIndex;
    for (var i = 0; i < orderLogic.length; i++) {
      data.orderLogic.orderLogic.push(orderLogic[i].textContent);
    }
  }


  var planTypeSelect = elem.ownerDocument.querySelector('#cycleType') &&
  elem.ownerDocument.querySelector('#cycleType').querySelectorAll('option');

  if (planTypeSelect) {
    data.planTypeSelect={};
    data.planTypeSelect.planTypeSelect = [];
    data.planTypeSelect.selectIndex = elem.ownerDocument.querySelector('#cycleType').selectedIndex;
    for (var i = 0; i < planTypeSelect.length; i++) {
      data.planTypeSelect.planTypeSelect.push(planTypeSelect[i].textContent);
    }
  }

  var selDay = elem.ownerDocument.querySelector('#selDay');

  if (selDay) {
    data.selDay = selDay.value;
  }

  var selectSearch = elem.ownerDocument.querySelector('#selectSearch') &&
  elem.ownerDocument.querySelector('#selectSearch').querySelectorAll('option');

  if (selectSearch) {
    data.selectSearch = [];

    for (var i = 0; i < selectSearch.length; i++) {
      data.selectSearch.push(selectSearch[i].textContent);
    }
  }

  var searchInput = elem.ownerDocument.querySelector('#searchInput');

  if (searchInput) {
    data.searchInput = searchInput.value;
  }

  var searchResult =
  elem.ownerDocument.querySelector('.autocomplete-suggestions');

  if(searchResult&&searchResult.style.display!=='none'){
    data.searchResult = [];
    for(var i=0; i<searchResult.querySelectorAll('.autocomplete-suggestion').length; i++){
      data.searchResult.push(searchResult.querySelectorAll('.autocomplete-suggestion')[i].textContent);
    }
  }

  return data;
doAction_uiControl268_dLVTD8: |
  if (data.eventType == 'AndroidBack') {
    ysp.customHelper.AndroidBackFlag = 'SaleBigData';
  }
  if (data.eventType === 'back') {
    if (!top.EAPI.isAndroid()) {
      var li = elem && elem.ownerDocument.querySelector('.breadcrumb').querySelectorAll('li').length;
      li > 1 ? elem.ownerDocument.querySelector('.breadcrumb').querySelectorAll('li')[li - 2].querySelector('a').click() : elem.ownerDocument.defaultView.close();
    } else {
      ysp.customHelper.AndroidBackFn();
    }
  }else if (data.eventType == 'order') {
    var select = elem.ownerDocument.querySelector('#orderLogic');
    select.value = select.querySelectorAll('option')[parseInt(data.dataCustom)].value;
    select.dispatchEvent(new Event('change'));
  }else if (data.eventType == 'time') {
    var select = elem.ownerDocument.querySelector('#cycleType');
    select.value = select.querySelectorAll('option')[parseInt(data.dataCustom)].value;
    select.dispatchEvent(new Event('change'));
  }else if (data.eventType == 'inquiry') {
    var select = elem.ownerDocument.querySelector('#selectSearch');
    select.value = select.querySelectorAll('option')[parseInt(data.dataCustom)].value;
    select.dispatchEvent(new Event('change'));
  }else if (data.eventType == 'searchInput') {
    var input = elem.ownerDocument.querySelector('#searchInput');
    input.value = data.dataCustom;
    input.dispatchEvent(new Event('change'));
  }else if (data.eventType == 'find') {
    var searchRes = elem.ownerDocument.querySelector('.autocomplete-suggestions');
    searchRes.querySelectorAll('.autocomplete-suggestion')[parseInt(data.dataCustom)].click();
  }
getTemplate_uiControl268_dLVTD8: "import {Component} from 'react'; \nimport {CustomHeader} from 'ysp-custom-components';\nexport default class extends Component{\n   constructor(props){\n  \tsuper(props);\n    this.state = {\n      back:props.customData.back,\n      show:false\n    }\n  }\n  componentDidMount(){\n    var _this = this;\n    ysp.customHelper.AndroidBackFlag = 'SaleBigData';\n    var handler = this.props.customHandler;\n    if (handler) {\n      handler({\n        eventType: 'AndroidBack'\n      });\n    }\n    // const {customHandler} = _this.props;\n    // customHandler({eventType:'AndroidBack'});\n  }\n  order(e){\n    var target = e.target;\n    if(target.className.indexOf('fixSelected')==-1){\n    \ttarget.parentNode.querySelector('.fixSelected').removeAttribute('class');\n      target.setAttribute('class','fixSelected');\n    }\n    var handler = this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata: target.getAttribute('num'),\n        eventType: 'order'\n      })\n    }\n  }\n  time(e){\n    var target = e.target;\n    if(target.className.indexOf('fixSelected')==-1){\n    \ttarget.parentNode.querySelector('.fixSelected').removeAttribute('class');\n      target.setAttribute('class','fixSelected');\n    }\n    var handler = this.props.customHandler;\n    if(handler){\n    \thandler({\n        data: target.getAttribute('num'),\n        eventType: 'time'\n      })\n    }\n  }\n  inquiry(e){\n    var target = e.target;\n    var handler = this.props.customHandler;\n    if(handler){\n    \thandler({\n        data: target.selectedIndex,\n        eventType: 'inquiry'\n      })\n    }\n  }\n  searchInput(e){\n    var target = e.target;\n    var handler = this.props.customHandler;\n    if(handler){\n    \thandler({\n        data: target.value,\n        eventType: 'searchInput'\n      })\n    }\n  }\n  shadow(e){\n    this.setState({\n      show:false\n    })\n  }\n  //属性props改变时执行。\n  componentWillReceiveProps(nextProps){\n    this.setState({\n      back:nextProps.customData.back\n    })\n  }\n  timeClick(e){\n    // const handler = this.props.customHandler;\n    // if(handler){\n    // \thandler({\n    //     eventType: 'timeChange'\n    //   })\n    // }\n    var evt = new Event('ysp-saleTime-show')\n    window.dispatchEvent(evt)\n  }\n  searchSelect(e){\n    var target = e.target;\n    if(target.parentNode.querySelector('.select')){\n      target.parentNode.querySelector('.select').removeAttribute('class');\n      target.setAttribute('class','select');\n    }else{\n      target.setAttribute('class','select');\n    }\n  }\n  find(e){\n    ysp.appMain.showLoading()\n    var target = e.target;\n    var handler = this.props.customHandler;\n    if(handler&&target.ownerDocument.querySelector('.select')){\n    \thandler({\n        data: target.ownerDocument.querySelector('.select').getAttribute('data-num'),\n        eventType: 'find'\n      })\n    }\n    this.setState({\n      show:false\n    })\n    setTimeout(function(){\n      ysp.appMain.hideLoading()\n    },1000)\n  }\n  render() {\n     var _this = this;\n     var filterData = this.props.data.customData;\n       return (\n         <div>\n           <CustomHeader \n             data={{centerText:\"销售业绩总览\",rightText:\"筛选\"}} \n             backIsShow={!this.state.back}\n             topIsShow = {this.state.back}\n             back={()=>{ \n                var handler = this.props.customHandler;\n                if (handler) {\n                  handler({\n                    eventType: 'back'\n                  });\n                }\n             }} \n             filterIsShow={true} \n            filter={()=>{this.setState({show: !this.state.show})}}/>\n           <div className='stockInquire-fixed'>\n             {\n               this.state.show\n               ? \n               <div className=\"fixWrapper\">\n                <div className=\"fixShadow\" onClick={_this.shadow.bind(_this)}></div>\n               \t<div className=\"fixContent\">\n                  <div className=\"dateOpt fix\">\n                  \t<span className=\"fixTitle\">日期选择</span>\n                    <div className=\"dateList\" onClick={_this.timeClick.bind(_this)}>\n                    \t<span display=\"display\" ref='date' >{filterData && filterData.selDay}</span>\n                      <span>\n                      \t<i></i>\n                      </span>\n                    </div>\n                  </div>\n                  {\n                    filterData&&filterData.orderLogic&&filterData.orderLogic.orderLogic\n                      ?\n                      <div className=\"timeOpt fix\">\n                        <span className=\"fixTitle\">订单取数逻辑</span>\n                        <div className=\"timeList\">\n                          {\n                            filterData.orderLogic.orderLogic.map(function(d,i){\n                              return(i==filterData.orderLogic.selectIndex?<span num={i} className=\"fixSelected\" onClick={_this.order.bind(_this)}>{d}</span>:<span num={i} onClick={_this.order.bind(_this)}>{d}</span>)\n                            })\n                          }\n                        </div>\n                      </div>\n                      :\n                    \t''\n                  }\n                  {\n                    filterData&&filterData.planTypeSelect&&filterData.planTypeSelect.planTypeSelect\n                      ?\n                      <div className=\"timeOpt fix\">\n                        <span className=\"fixTitle\">时间选择</span>\n                        <div className=\"timeList\">\n                          {\n                            filterData.planTypeSelect.planTypeSelect.map(function(d,i){\n                              return(i==filterData.planTypeSelect.selectIndex?<span num={i} className=\"fixSelected\" onClick={_this.time.bind(_this)}>{d}</span>:<span num={i} onClick={_this.time.bind(_this)}>{d}</span>)\n                            })\n                          }\n                        </div>\n                      </div>\n                      :\n                    \t''\n                  }\n                  {\n                  \tfilterData&&filterData.selectSearch\n                    \t?\n                      <div className=\"searchOpt\">\n                        <span className=\"fixTitle\">查询维度</span>\n                        <div className=\"searchList\">\n                        \t<select onChange={_this.inquiry.bind(_this)}>\n                          \t{\n                              filterData.selectSearch.map(function(d,i){\n                                return(<option>{d}</option>)\n                              })\n                            }\n                          </select>\n                          <AInput placeholder=\"请输入搜索内容\" onChange={_this.searchInput.bind(_this)}/>\n                        </div>\n                      </div>\n                      :\n                    \t''\n                  }\n                  {\n                  \tfilterData&&filterData.searchResult\n                    \t?\n                      <div className=\"searchRes\">\n                        <div className=\"searchList\">\n                        \t<ul>\n                          \t{\n                              filterData.searchResult.map(function(d,i){\n                                return(<li data-num={i} onClick={_this.searchSelect.bind(_this)}>{d}</li>)\n                              })\n                            }\n                          </ul>\n                        </div>\n                      </div>\n                      :\n                    \t''\n                  }\n                  <div className=\"inquire\" onClick={_this.find.bind(_this)}>\n                  \t<span>查询</span>\n                  </div>\n                </div>\n               </div>\n               : \n               <div></div>\n             }\n           </div>\n         </div>\n       );\n   }\n}"
getData_control286_xVOThl: |
  if (!elem) {
    return;
  }
  var data = {
    orderText: [],
    dataText: [],
    dataValue: []
  };
  var selects = elem.querySelectorAll('select'); //订单选择逻辑
  var options0 = selects[0].querySelectorAll('option');
  for (var i = 0; i < options0.length; i++) {
    data.orderText.push(options0[i].textContent);
  } //时间选择逻辑
  var options1 = selects[1].querySelectorAll("option");
  for (var j = 0; j < options1.length; j++) {
    data.dataText.push(options1[j].textContent);
  }
  var value = elem.querySelector("#data_1").querySelector("#selDay").value;
  data.dataValue.push(value);
  return data;
doAction_uiControl274_OHNOll: |
  if (data.eventType === 'change') {
    var value = data.dataCustom.value; //传值到折线图中使用。

    ysp.customHelper.saleTimeId('1');
    var selectEl = elem.querySelectorAll('select');
    selectEl[1].selectedIndex = value;

    if (selectEl[1].onchange) {
      selectEl[1].onchange();
    } else if (selectEl[1].dispatchEvent) {
      selectEl[1].dispatchEvent(new Event('change'));
    } else {
      selectEl[1].dispatchEvent(new MouseEvent('click', {
        view: selectEl[1].ownerDocument.defaultView,
        bubbles: true,
        cancelable: true
      }));
    }
  }
  if (data.eventType == 'order') {
    var value = data.dataCustom.value; //传值到折线图中使用

    ysp.customHelper.saleOrderId('1');
    var selectEl = elem.querySelectorAll('select');
    selectEl[0].selectedIndex = value;

    if (selectEl[0].onchange) {
      selectEl[0].onchange();
    } else if (selectEl[0].dispatchEvent) {
      selectEl[0].dispatchEvent(new Event('change'));
    } else {
      selectEl[0].dispatchEvent(new MouseEvent('click', {
        view: selectEl[0].ownerDocument.defaultView,
        bubbles: true,
        cancelable: true
      }));
    } //   var selects = elem.querySelectorAll('select');
    //   var options0 = selects[0].querySelectorAll('option');
    //   if (value == 0) {
    //     options0[0].selected = "selected";
    //   }
    //   if (value == 1) {
    //     options0[1].selected = "selected";
    //   }

  }
getTemplate_uiControl274_OHNOll: "import {ComplexHeader} from 'ysp-custom-components';\nimport {SaleReachCalendar} from 'ysp-custom-components';\nexport default class extends React.Component {\n  constructor(props){\n    super(props)\n  }\n  componentDidUpdate(){\n    var elem=this.refs.toTop.ownerDocument.querySelector(\".view-wrapper\");\n    \n    setTimeout(function(){\n      elem.scrollTop=0;\n    },500)\n  }\n  renderOptions(){\n  \tvar data = this.props.customData && this.props.customData.dataText;\n    return data.map((item,index) => {\n    \treturn (\n      \t<option value={index}>{item}</option>\n      )\n    })\n  }\n  handlerChange(e){\n    var value = e.target.selectedIndex;\n    var handler = this.props.customHandler;\n    if(handler){\n    \thandler({\n      \tdata: {\n          value: value\n        },\n        eventType: 'change'\n      })\n    }\n  }\n  \n  orderOptions(){\n    var data = this.props.customData && this.props.customData.orderText;\n    return data.map((item,index)=>{\n      return (\n      \t<option value={index}>{item}</option>\n      )\n    })\n  }\n  orderChange(e){\n    var value = e.target.value;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data:{\n          value: value\n        },\n        eventType:'order'\n      })\n    }\n    \n  }\n  handlerClick(e){\n    // const handler = this.props.customHandler;\n    // if(handler){\n    // \thandler({\n    //     eventType: 'timeChange'\n    //   })\n    // }\n    var evt = new Event('ysp-saleTime-show')\n    window.dispatchEvent(evt)\n  }\n  \n\trender(){\n    var _this = this;\n    var data = this.props.customData || [];\n  \treturn (\n    \t<div className='ysp-saleAchievement-time' ref=\"toTop\">\n        <div className='timeSearch'>\n          <div>\n          \t<select selectedIndex='0'  onChange={this.handlerChange.bind(this)}>{this.renderOptions()}</select>\n          </div>\n          <div>\n          \t<select selectedIndex='1' onChange={this.orderChange.bind(this)}>{this.orderOptions()}</select>\n          </div>\n          <div>\n            <i></i>\n            <span display=\"display\" onClick={this.handlerClick.bind(this)} ref='date' >{data && data.dataValue}</span>\n            <i></i>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}"
getData_control287_GUn0CG: |
  //   return;
  // }
  // var text = elem.ownerDocument.querySelector("#planTypeSelect").value;
  // if (text == 'month') {
  //   return true;
  // } else {
  //   return false;
  // }
  // return;
  return true;
doAction_uiControl278_2krAyF: |
  if (data.eventType == 'upValue') {
    var input = elem.ownerDocument.querySelector('#selDay');
    input.value = data.dataCustom;
    var cwin = elem.ownerDocument.defaultView;
    cwin.timeSaleInit();
  }
getTemplate_uiControl278_2krAyF: |-
  import {Component} from 'react';
  import {SaleReachCalendar} from 'ysp-custom-components';
  export default class extends Component{
    constructor(props){
      super(props);
      this.state={
        year : true,
        mouth : true,
        day : true,
        show : false,
        data : props.customData
      }
      window.addEventListener('ysp-saleTime-show',this.toggle.bind(this),false)
    }
    componentDidUpdate(){
      this.state.show ? this.styleId(): console.log('日历还没打开呢');
      
    }
    styleId(){
      var doc = this.refs.time;
      if(this.state.data && !this.state.day  && !!this.state.mouth){
        doc.querySelector('#year').style.width = '50%';
        doc.querySelector('#mouth').style.width = '50%';
      }
      if(this.state.data && !this.state.mouth && !this.state.day){
        doc.querySelector('#year').style.width = '100%';
      }
      if(!this.state.data){
        doc.querySelector('#year').style.width = '100%';
      }
    }
    toggle(){
      this.setState({
        show : !this.state.show
      })
    }
    activeValue(even){
      var doc = even.parentElement.nextElementSibling;
      var year = doc.querySelector('#year').querySelector('.active').textContent;
      var mouth = this.state.mouth && doc.querySelector('#mouth').querySelector('.active').textContent;
      var day = this.state.day && doc.querySelector('#day').querySelector('.active').textContent;
      mouth = mouth < 10 ? '0' + mouth : mouth; 
      day = day && day < 10 ? '0' + day : day;
      var time = day ? (year + '-' + mouth + '-' + day ) :( mouth ? year + '-' + mouth : year);
      return time;
      
    }
    upValue(e){
      var handler = this.props.customHandler;
      var value = this.activeValue(e.target);
      if(handler){
        handler({
          data : value,
          eventType : 'upValue'
        })
      }
      this.setState({
        show : false
      })
    }
    render(){
      var _this = this;
      return(
        <div>{this.state.show && 
          <div className='moudle-time' ref='time'>
            <div className = 'date-time'>
              <SaleReachCalendar 
                mouth = {_this.state.mouth}
                day = {_this.state.day}
                upValue = {_this.upValue.bind(_this)}
                show = {(e)=>{
                  _this.toggle();
                }}
                y = {_this.state.year}
              />
            </div>
          </div>}
        </div>
      )
    }
  }
getData_control288_fFLi4R: >
  if (!elem) {
    return [];
  }

  var data = {
    day: [],
    week: [],
    month: [],
    year: []
  };

  var dayQty = elem.querySelector("#dayQty") &&
  elem.querySelector("#dayQty").textContent;

  var dayAmt = elem.querySelector("#dayAmt") &&
  elem.querySelector("#dayAmt").textContent;

  data.day.push(dayQty);

  data.day.push(dayAmt);

  var weekQty = elem.querySelector("#weekQty") &&
  elem.querySelector("#weekQty").textContent;

  var weekAmt = elem.querySelector("#weekAmt") &&
  elem.querySelector("#weekAmt").textContent;

  data.week.push(weekQty);

  data.week.push(weekAmt);

  var monthQty = elem.querySelector("#monthQty") &&
  elem.querySelector("#monthQty").textContent;

  var monthAmt = elem.querySelector("#monthAmt") &&
  elem.querySelector("#monthAmt").textContent;

  data.month.push(monthQty);

  data.month.push(monthAmt);

  var yearQty = elem.querySelector("#yearQty") &&
  elem.querySelector("#yearQty").textContent;

  var yearAmt = elem.querySelector("#yearAmt") &&
  elem.querySelector("#yearAmt").textContent;

  data.year.push(yearQty);

  data.year.push(yearAmt);

  return data;
doAction_uiControl279_OeJEyD: ''
getTemplate_uiControl279_OeJEyD: "export default class extends React.Component {\n  \n\trender(){\n    var item = this.props.customData || [];\n  \treturn (\n    \t<div className='ysp-saleAchievementIndex'>\n         <div>\n          <div className='ysp-achievement-sales'>\n            <div className='listItem'>\n              <div>\n              \t<span className=\"listItemDay\">今日销量</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n              \t<span className=\"listItemWeek\">本周销量</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n              \t<span className=\"listItemMonth\">本月销量</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n              \t<span className=\"listItemYear\">本年销量</span>\n              </div>\n              \n            </div>\n          </div>\n        </div>\n        \n        \n        \n        <div>\n          <div className='ysp-achievement-sales'>\n            <div className='listItem'>\n              <div>\n                <h2>{item.day[0]}</h2>\n                <span style={{\"paddingLeft\" : \"24px\"}}>销量(台)</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n                <h2>{item.week[0]}</h2>\n                <span style={{\"paddingLeft\" : \"24px\"}}>销量(台)</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n                <h2>{item.month[0]}</h2>\n                <span style={{\"paddingLeft\" : \"24px\"}}>销量(台)</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n                <h2>{item.year[0]}</h2>\n                <span style={{\"paddingLeft\" : \"24px\"}}>销量(台)</span>\n              </div>\n            </div>\n          </div>\n        </div>\n        \n        <div>\n          <div className='ysp-achievement-sales'>\n            <div className='listItem'>\n              <div>\n                <h2 className=\"itemColor\">{item.day[1]}</h2>\n                <span>销售额(万元)</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n                <h2 className=\"itemColor\">{item.week[1]}</h2>\n                <span>销售额(万元)</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n                <h2 className=\"itemColor\">{item.month[1]}</h2>\n                <span>销售额(万元)</span>\n              </div>\n            </div>\n            <div className='listItem'>\n              <div>\n                <h2 className=\"itemColor\">{item.year[1]}</h2>\n                <span>销售额(万元)</span>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    )\n  }\n}"
getData_control289_v6gpoF: |
  if (!elem) {
    return [];
  }
  var echartDatas = [];
  var map = elem.querySelector('div[id^="map"]');
  var mapData = map.getAttribute('option');
  var mapName = map.getAttribute('optionName');
  var mapProvince = JSON.parse(map.getAttribute('mapProvince'));
  var echartItem = {
    mapData: mapData,
    mapName: mapName,
    mapProvince: mapProvince
  };
  echartDatas.push(echartItem);
  return echartDatas;
doAction_uiControl280_HmOuTv: ''
getTemplate_uiControl280_HmOuTv: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      active: true\n    }\n  }\n  handlerClick() {\n    this.setState({\n      active: !this.state.active\n    })\n  }\n  componentDidUpdate(){\n    var _this = this;\n    \t_this.showMap(); \n  }\n  showMap(){\n    var map = new BMap.Map(this.refs.map);\n    //var name= this.refs.map.getAttribute('data-name');\n    //var obj = this.refs.map.getAttribute('data-Map');\n    var name = this.props.customData && this.props.customData[0].mapName;\n    var obj = this.props.customData && this.props.customData[0].mapData;\n    var JSONObj = JSON.parse(obj);\n    if(JSONObj != null && JSONObj.length > 0){\n      for(var i =0; i < JSONObj.length;i++){\n      var jd = JSONObj[i].value[0];\n      var wd = JSONObj[i].value[1];\n      map.centerAndZoom(new BMap.Point(jd,wd),14);\n    }\n\t\t map.enableScrollWheelZoom(true);\n     //map.scrollEnabled = YES;\n     //map.setAllGesturesEnabled(true);\n     //map.setZoomGesturesEnabled(true);\n     //map.setScrollGesturesEnabled(true); \n\t\n\t// 用经纬度设置地图中心点\n\t\t\tmap.clearOverlays();\n    \tfor(var j =0; j < JSONObj.length;j++){\n      var jd = JSONObj[j].value[0];\n      var wd = JSONObj[j].value[1];\n      var new_point = new BMap.Point(jd,wd);\n\t\t\tvar marker = new BMap.Marker(new_point);  // 创建标注\n\t\t\tmap.addOverlay(marker);              // 将标注添加到地图中\n\t\t\tmap.panTo(new_point); \n    \t}   \n    }else if(name != null){\n      map.centerAndZoom(name,14);\n      map.enableScrollWheelZoom(true);\n      //map.scrollEnabled = YES;\n      //map.setAllGesturesEnabled(true);\n     \t//map.setZoomGesturesEnabled(true);\n      //map.setScrollGesturesEnabled(true);\n    }else{\n      return ;\n    } \n\t}\n  render() {\n    var map = JSON.parse(this.props.customData && this.props.customData[0].mapData);\n    var mapName = this.props.customData && this.props.customData[0].mapName;\n    var mapProvince =  this.props.customData && this.props.customData[0].mapProvince;\n    mapProvince && echarts.registerMap('mapProvince', mapProvince);\n    var customHandler = this.props.customHandler;\n    var _this = this;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)} >\n                <i className=\"space\"></i>\n                <span>全国销售数据展示图</span>\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n          <div style = {{display : this.state.active ? 'block' : 'none' }}>\n            {\n              ( mapName == null && map !=null)  ? <BarEchart\n              customData = {map}\n              /> : ( mapName == null && map ==null) ? <BarEcharts customData = {map}/> :\n              <div id='map' ref='map' style={{marginLeft: '10px', marginRight: '10px',\n  \t\t\t\t\t\theight: '260px'}}></div>\n            }\n          </div>\n          </div>\n      </div>\n    );\n  }\n}\n\n\nfunction toQfw_new(num,flag) {\n\tvar str_num = flag?(num/10000).toFixed(2).toString():num.toString();\n\tvar end_num = \"\";\n\tif(str_num.indexOf(\".\") > 0){\n\t\tend_num = str_num.substring(str_num.indexOf(\".\"), str_num.length);\n\t\tstr_num = str_num.substring(0,str_num.indexOf(\".\"));\n\t}\n\tif(end_num == \".00\"){\n\t\tend_num = \"\";\n\t}\n\t\n\tvar first_sign = \"\";\n\tif(str_num.indexOf(\"-\") == 0){\n\t\tstr_num = str_num.substring(1,str_num.length);\n\t\tfirst_sign = \"-\"\n\t}\n\t\n\tvar result = \"\";\n\twhile (str_num.length > 3) {\n\t\tresult = \",\" + str_num.slice(-3) + result;\n\t\tstr_num = str_num.slice(0, str_num.length - 3)\n\t}\n\treturn first_sign + str_num + result + end_num;\n}\n\n\nvar echartStyle = {\n  width: '360px',\n  height: '420px'\n}\nclass BarEchart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chart = null;\n  }\n  render() {\n    return (\n      <div ref=\"echart\" style={echartStyle}></div>\n    );\n  }\n  realRender() {\n    var option = this.props.customData || \"\";\n    function toQfw(num) {\n\t    var str_num = num.toString();\n\t    var result = \"\";\n\t    while (str_num.length > 3) {\n\t        result = \",\" + str_num.slice(-3) + result;\n\t        str_num = str_num.slice(0, str_num.length - 3);\n\t    }\n\t    return str_num + result;\n\t  };\n    var obj = {\n      tooltip: {\n        trigger: 'item',\n        padding: 0,\n        borderColor: 'rgba(0,0,0,0)',\n\t      backgroundColor: 'rgba(0,0,0,0)',\n        formatter: function formatter(params) {\n          try {\n            var tip = '<div class=\"m-tooltip\">' + '<div class=\"title\">' + params.data.company + '</div>' + '<div class=\"content\">' + '<div class=\"a\"><span>销量</span><b>' + toQfw(params.value) + '</b></div>' + '<div class=\"b\"><span>销售额</span><b> ' + toQfw_new(params.data.sum.toFixed(2)) + '</b></div></div></div>';\n            return tip;\n          } catch (e) {\n            return;\n          }\n        }\n      }\n    }\n    option && this.chart.setOption(Object.assign({},option,obj));\n    //option && this.chart.setOption(option);\n  }\n  componentDidUpdate() {\n    this.realRender();\n  }\n  componentDidMount() {\n    this.chart = echarts.init(this.refs.echart);\n    this.realRender();\n  }\n}\nclass BarEcharts extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  render(){\n    return(\n    \t<div style={echartStyle}></div>\n    );\n  }\n}\n"
getData_control290_UsZ1zJ: >
  if (!elem) {
    return;
  }

  var data = {
    text: [],
    lines: [],
    business: [],
    project: [],
    model: [],
    color: [],
    saleTimeId: [],
    saleOrderId: []
  };

  var text = elem.querySelector("#tren").textContent;

  data.text.push(text);

  var lines = elem.querySelector('div[id^="lines"]');

  if (lines) {
    lines = lines.getAttribute('option');
  }

  data.lines.push(lines); //事业部

  var businessOptions =
  elem.ownerDocument.querySelector("#departmentId").querySelectorAll("option");

  for (var i = 0; i < businessOptions.length; i++) {
    var business = businessOptions[i].textContent;
    data.business.push(business);
  } //项目

  var projectOptions =
  elem.ownerDocument.querySelector("#projectId").querySelectorAll("option");

  for (var i = 0; i < projectOptions.length; i++) {
    var project = projectOptions[i].textContent;
    data.project.push(project);
  } //机型

  var modelOptions =
  elem.ownerDocument.querySelector("#modelId").querySelectorAll("option");

  for (var i = 0; i < modelOptions.length; i++) {
    var model = modelOptions[i].textContent;
    data.model.push(model);
  } //颜色

  var colorOptions =
  elem.ownerDocument.querySelector("#materialColor").querySelectorAll("option");

  for (var i = 0; i < colorOptions.length; i++) {
    var color = colorOptions[i].textContent;
    data.color.push(color);
  } //从时间下拉选项中传来的值

  var saleTimeId = window.timeId;

  if (saleTimeId == undefined) {
    saleTimeId = "";
  }

  data.saleTimeId.push(saleTimeId); //从订单逻辑下拉选项中传来的值

  var saleOrderId = window.orderId;

  if (saleOrderId == undefined) {
    saleOrderId = "";
  }

  data.saleOrderId.push(saleOrderId);

  return data;
doAction_uiControl281_qTQB3k: |
  if ('clear' == data.eventType) {
    var input = elem.ownerDocument.querySelector('input[type="button"]');
    input && input.click();
  }
  if ('business' == data.eventType) {
    var value = data.dataCustom.value;
    var selectEl = elem.querySelectorAll('select');
    selectEl[0].selectedIndex = value;

    if (selectEl[0].onchange) {
      selectEl[0].onchange();
    } else if (selectEl[0].dispatchEvent) {
      selectEl[0].dispatchEvent(new Event('change'));
    } else {
      selectEl[0].dispatchEvent(new MouseEvent('click', {
        view: selectEl[0].ownerDocument.defaultView,
        bubbles: true,
        cancelable: true
      }));
    }
  } else if ('project' == data.eventType) {
    var value = data.dataCustom.value;
    var selectEl = elem.querySelectorAll('select');
    selectEl[1].selectedIndex = value;

    if (selectEl[1].onchange) {
      selectEl[1].onchange();
    } else if (selectEl[1].dispatchEvent) {
      selectEl[1].dispatchEvent(new Event('change'));
    } else {
      selectEl[1].dispatchEvent(new MouseEvent('click', {
        view: selectEl[1].ownerDocument.defaultView,
        bubbles: true,
        cancelable: true
      }));
    }
  } else if ('model' == data.eventType) {
    var value = data.dataCustom.value;
    var selectEl = elem.querySelectorAll('select');
    selectEl[2].selectedIndex = value;

    if (selectEl[2].onchange) {
      selectEl[2].onchange();
    } else if (selectEl[2].dispatchEvent) {
      selectEl[2].dispatchEvent(new Event('change'));
    } else {
      selectEl[2].dispatchEvent(new MouseEvent('click', {
        view: selectEl[2].ownerDocument.defaultView,
        bubbles: true,
        cancelable: true
      }));
    }
  } else if ('color' == data.eventType) {
    var value = data.dataCustom.value;
    var selectEl = elem.querySelectorAll('select');
    selectEl[3].selectedIndex = value;

    if (selectEl[3].onchange) {
      selectEl[3].onchange();
    } else if (selectEl[3].dispatchEvent) {
      selectEl[3].dispatchEvent(new Event('change'));
    } else {
      selectEl[3].dispatchEvent(new MouseEvent('click', {
        view: selectEl[3].ownerDocument.defaultView,
        bubbles: true,
        cancelable: true
      }));
    }
  }
  if ("lines" == data.eventType) {
    //修改下拉选项的参数。
    ysp.customHelper.saleTimeId("");
    ysp.customHelper.saleOrderId("");
  }
getTemplate_uiControl281_qTQB3k: "import {\n  Component\n} from 'react';\nimport {\n  Dialog,CustomHeader\n} from 'ysp-custom-components';\nexport default class extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n      open: false,\n      text: '',\n      business: 0,\n      project: 0,\n      model: 0,\n      color: 0\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n  handlerClear(){\n    //清空筛选的方法。\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'clear'\n      })\n    }\n    //清空所选择的数据。\n    this.setState({\n      business: 0,\n      project: 0,\n      model: 0,\n      color: 0\n    })\n  }\n  handlerLine(e){\n    //点击\"事业部\"、\"项目\"等调整state中的参数。\n    var text = e.target.dataset.text;\n    if(text == '事业部'){\n      this.setState({\n        project: 0,\n        model: 0,\n        color: 0\n      })\n    } else if(text == \"项目\"){\n      this.setState({\n        model: 0,\n        color: 0\n      })\n    } else if(text == \"机型\"){\n      this.setState({\n        color: 0\n      })\n    }\n    this.setState({\n      open: true,\n      text: text\n    })\n    \n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType:'lines'\n      })\n    }\n  }\n  render(){\n    var line = this.props.customData && this.props.customData.lines[0] != null? this.props.customData.lines:false;\n    var lines;\n    if(line){\n      lines = JSON.parse(line);\n \_  }else{\n      return '';\n    }\n    var text = this.props.customData && this.props.customData.text;\n    var datas = this.props.customData || [];\n    var _this = this;\n    return (\n      <div style={{padding:'0 5px'}}>\n      \t<div className='ysp-sale-achievement-header-wrapper'>\n          <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"date\"></i>\n                <span>{text}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n          <div style = {{display : this.state.active ? 'block' : 'none' }}>\n            <div>\n            \t<div className=\"ysp-sale-line-option\" data-text=\"事业部\" onClick={this.handlerLine.bind(this)}>\n                <span data-text=\"事业部\">事业部</span>\n                <span data-text=\"事业部\" className=\"ysp-sale-text-color\">{datas && \ndatas.business[ (datas.saleTimeId[0] == 1 || datas.saleOrderId[0] == 1) ? 0 : _this.state.business]}</span>\n                <span data-text=\"事业部\"></span>\n              </div>\n              <div className=\"ysp-sale-line-option\" data-text=\"项目\" onClick = {this.handlerLine.bind(this)}>\n                <span data-text=\"项目\">项目</span>\n                <span data-text=\"项目\" className=\"ysp-sale-text-color\">{datas && datas.project[(datas.saleTimeId[0] == 1 || datas.saleOrderId[0] == 1) ? 0 : _this.state.project]}</span>\n                <span data-text=\"项目\"></span>\n              </div>\n              <div className=\"ysp-sale-line-option\" data-text=\"机型\" onClick = {this.handlerLine.bind(this)}>\n                <span data-text=\"机型\">机型</span>\n                <span data-text=\"机型\" className=\"ysp-sale-text-color\">{datas && datas.model[(datas.saleTimeId[0] == 1 || datas.saleOrderId[0] == 1) ? 0 : _this.state.model]}</span>\n                <span data-text=\"机型\"></span>\n              </div>\n              <div className=\"ysp-sale-line-option ysp-sale-line-color\" data-text=\"颜色\" onClick = {this.handlerLine.bind(this)}>\n                <span data-text=\"颜色\">颜色</span>\n                <span data-text=\"颜色\" className=\"ysp-sale-text-color\">{datas && datas.color[(datas.saleTimeId[0] == 1 || datas.saleOrderId[0] == 1) ? 0 : _this.state.color]}</span>\n                <span data-text=\"颜色\"></span>\n              </div>\n              <div className=\"ysp-sale-line-clearAll\" onClick={this.handlerClear.bind(this)}>清空筛选</div>\n            </div>\n    \n            <div>\n            \t{\n              \tthis.state.open\n              \t\t&& \n                <Dialog>\n                  <div className=\"ysp-dialog-wrapper\">\n                    <CustomHeader\n                      data={{centerText:(this.state.text), rightText:'筛选'}}\n                      backIsShow={true}\n                      back={()=>{\n                        var handler = this.props.customHandler;\n                        if(handler){\n                          handler({\n                            eventType:'back'\n                          })\n                        }\n                        this.setState({\n                          open:false\n                        })\n                      }}\n                      filterIsShow = {false}\n                      filter ={()=>{\n                        console.info(\"header filter ...\")\n                      }}\n \_ \_ \_ \_ \_ \_ \_ \_ \_\t/>\n                    \n                    <div>\n                      {\n                        <ul className=\"ysp_sale-line_panel_ul\" >\n                        {\n                          this.state.text == \"事业部\"\n                            ?\n                            (datas.business.length !=0 ? datas.business.map(function(d, i) {\n                              return (\n                                 <li onClick={(e)=>{\n                                    var handler = _this.props.customHandler;\n                                    if(handler){\n                                      handler({\n                                        data:{\n                                          value: i\n                                        },\n                                        eventType:'business'\n                                      })\n                                    }\n                                    var business = _this.state.business;\n                                    //当选择\"事业部\"时，所选择的数据和\"事业部\"之前的数据不同时，把剩下的选项数据清空。\n                                    if(business != i){\n                                      _this.setState({\n                                        project: 0,\n                                        model: 0,\n                                        color: 0\n                                      })\n                                    }\n                                    _this.setState({\n                                      open: false,\n                                      business: i\n                                    })\n                                  }}>{d}</li>\n                              )\n                        \t\t}):<div>暂无数据</div>)\n                          \t: \n                          \tthis.state.text == \"项目\"\n                            ? \n                            (datas.project.length!='0' ? datas.project.map(function(d, i) {\n                            return (\n                             <li onClick={(e)=>{\n                                    var handler = _this.props.customHandler;\n                                    if(handler){\n                                      handler({\n                                        data:{\n                                          value: i\n                                        },\n                                        eventType:'project'\n                                      })\n                                    }\n                                  \tvar project = _this.state.project;\n                                    //当选择\"项目\"时，所选择的数据和\"项目\"之前的数据不同时，把剩下的选项数据清空。\n                                    if(project != i){\n                                      _this.setState({\n                                        model: 0,\n                                        color: 0\n                                      })\n                                    }\n                                    _this.setState({\n                                      open: false,\n                                      project: i\n                                    })\n                                  }}>{d}</li>\n                            )\n                        \t\t}) : <div>暂无数据</div>)\n                          \t: \n                          \tthis.state.text == \"机型\"\n                            ?  \n                            (datas.model.length !='0' ? datas.model.map(function(d, i) {\n                            return (\n                             <li onClick={(e)=>{\n                                    var handler = _this.props.customHandler;\n                                    if(handler){\n                                      handler({\n                                        data:{\n                                          value: i\n                                        },\n                                        eventType:'model'\n                                      })\n                                    }\n                                  \tvar model = _this.state.model;\n                                    //当选择\"机型\"时，所选择的数据和\"机型\"之前的数据不同时，把剩下的选项数据清空。\n                                    if(model != i){\n                                      _this.setState({\n                                        color: 0\n                                      })\n                                    }\n                                    _this.setState({\n                                      open: false,\n                                      model: i\n                                    })\n                                  }}>{d}</li>\n                            )\n                        \t\t}):<div>暂无数据</div>)\n                          \t:\n                          \t(datas.color.length !='0' ? datas.color.map(function(d, i) {\n                            return (\n                             <li onClick={(e)=>{\n                                    var handler = _this.props.customHandler;\n                                    if(handler){\n                                      handler({\n                                        data:{\n                                          value: i\n                                        },\n                                        eventType:'color'\n                                      })\n                                    }\n                                    _this.setState({\n                                      open: false,\n                                      color: i\n                                    })\n                                  }}>{d}</li>\n                            )\n                        }):<div>暂无数据</div>)\n                      }</ul>  \n                    }\n                    </div>\n                    \n                  </div>\n\t\t\t\t\t\t\t\t\t\t\n                </Dialog>\n            \t}\n            </div>\n            <BarEchart\n              \tcustomData = {lines}\n              />\n            \n          </div>\n        </div>\n      </div>\n    );\n  }\n}\nvar echartStyle = {\n  //width: '396px',\n  width: '100%',\n  height: '350px',\n  //marginLeft: '-22px',\n  marginLeft: '0px',\n  marginRight: '0px'\n}\nclass BarEchart extends React.Component {\n  constructor(props) {\n    super(props);\n    this.chart = null;\n  }\n  render(){\n    return(\n       <div ref=\"echart\" style={echartStyle}></div>\n    );\n  }\n  realRender(){\n    var option = this.props.customData || [];\n    option && this.chart.setOption(option);\n  }\n  componentDidUpdate() {\n    this.realRender();\n  }\n  componentDidMount() {\n \_ \_this.chart = echarts.init(this.refs.echart);\n    this.realRender();\n  }\n}\n"
getData_control292_Qltr3M: |
  if (!elem) {
    return;
  }
  var modelTable = elem.querySelector('table[id^="model-table"]');
  var echartDatas = [];
  if (modelTable) {
    var businessData = [];
    var trs = modelTable.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            //titles.push(ysp.customHelper.trim(subItem.textContent));
            titles.push(ysp.customHelper.trim(subItem.title ? subItem.title : subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            //var subString = subItem.textContent;
            var subString = subItem.title ? subItem.title : subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = modelTable.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(modelTable.parentElement.parentElement.previousElementSibling.textContent); //是否可以钻取标识

    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'modelTable',
      clickFlag: clickFlag
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl283_gRSgcF: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var modelTable = elem.querySelector('table[id^="model-table"]');

    if (modelTable && 'modelTable' == title) {
      var trs = modelTable.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var modelTable = elem.querySelector('table[id^="model-table"]');

    if (modelTable && 'modelTable' == title) {
      var ths = modelTable.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
getTemplate_uiControl283_gRSgcF: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"model\"></i>\n                <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>\n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control293_eT4uNX: |
  if (!elem) {
    return;
  }
  var salerManTable = elem.querySelector('table[id^="salerMan-table"]');
  var echartDatas = [];
  if (salerManTable) {
    var businessData = [];
    var trs = salerManTable.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = salerManTable.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(salerManTable.parentElement.parentElement.previousElementSibling.textContent); //是否可以钻取标识

    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'salerManTable',
      clickFlag: clickFlag
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl284_A3eeCr: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var salerManTable = elem.querySelector('table[id^="salerMan-table"]');

    if (salerManTable && 'salerManTable' == title) {
      var trs = salerManTable.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var salerManTable = elem.querySelector('table[id^="salerMan-table"]');

    if (salerManTable && 'salerManTable' == title) {
      var ths = salerManTable.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
getTemplate_uiControl284_A3eeCr: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"salesman\"></i>\n                <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            : \n          <div></div>\n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control294_QhsLey: |
  if (!elem) {
    return;
  }
  var saleTable0 = elem.querySelector('table[id^="sale-table0"]');
  var echartDatas = [];
  if (saleTable0) {
    var businessData = [];
    var table0 = saleTable0.parentElement.parentElement.parentElement;
    var table0Ths = table0.querySelectorAll("tr")[0].querySelectorAll("th");
    var table0Text0 = table0Ths[0].textContent;
    var table0Text1 = table0Ths[1].textContent;
    var trs = saleTable0.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = saleTable0.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(saleTable0.parentElement.parentElement.parentElement.querySelector('.u-title').textContent);
    var flagA = saleTable0.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');
    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'saleTable0',
      table0Text0: table0Text0,
      table0Text1: table0Text1,
      clickFlag: clickFlag,
      flagA: flagA
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl285_XJezgi: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable0 = elem.querySelector('table[id^="sale-table0"]');

    if (saleTable0 && 'saleTable0' == title) {
      var trs = saleTable0.querySelectorAll("tr");

      if (0 == index) {
        //排序
        var ths = trs && trs[0].querySelectorAll("th");
        ths && ths[0].click();
      } else {
        //钻取
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  } //排序
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable0 = elem.querySelector('table[id^="sale-table0"]');

    if (saleTable0 && 'saleTable0' == title) {
      var ths = saleTable0.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths[indexs].click();
        } else if (2 == indexs) {
          ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table0"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl285_XJezgi: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n  unitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table0Text0}</span>\n                <span>{datas[0].businessData.table0Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :  \n          <div>\n            <DataGrids/>\n          </div>\n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrids extends React.Component{\n  constructor(props){\n    super(props);\n  }\n  render(){\n    return(\n    \t<div></div>\n    );\n  }\n}\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  //表格钻取\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  //表头排序\n  sortClick = (e) =>{\n    var title = e.currentTarget.dataset.title;\n    var index = e.currentTarget.dataset.index;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index: index,\n          title: title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) :\n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ?\n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) :\n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control295_5r4na7: |
  if (!elem) {
    return;
  }
  var saleTable1 = elem.querySelector('table[id^="sale-table1"]');
  var echartDatas = [];
  if (saleTable1) {
    var businessData = [];
    var table1 = saleTable1.parentElement.parentElement.parentElement;
    var table1Ths = table1.querySelectorAll("tr")[0].querySelectorAll("th");
    var table1Text0 = table1Ths[0].textContent;
    var table1Text1 = table1Ths[1].textContent;
    var trs = saleTable1.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = saleTable1.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(saleTable1.parentElement.parentElement.parentElement.querySelector('.u-title').textContent);
    var flagA = saleTable1.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');
    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'saleTable1',
      table1Text0: table1Text0,
      table1Text1: table1Text1,
      clickFlag: clickFlag,
      flagA: flagA
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl286_3ulbUN: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable1 = elem.querySelector('table[id^="sale-table1"]');

    if (saleTable1 && 'saleTable1' == title) {
      var trs = saleTable1.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs[0].querySelectorAll("th");
        ths && ths[0].click();
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  } //排序
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable1 = elem.querySelector('table[id^="sale-table1"]');

    if (saleTable1 && 'saleTable1' == title) {
      var ths = saleTable1.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table1"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl286_3ulbUN: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table1Text0}</span>\n                <span>{datas[0].businessData.table1Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>\n        }\n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  //钻取\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  //排序\n  sortClick = (e) =>{\n    var title = e.currentTarget.dataset.title;\n    var index = e.currentTarget.dataset.index;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          title: title,\n          index: index\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ?\n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control296_iZC8RV: |
  if (!elem) {
    return;
  }
  var saleTable2 = elem.querySelector('table[id^="sale-table2"]');
  var echartDatas = [];
  if (saleTable2) {
    var businessData = []; //销量和销售额总和

    var table2 = saleTable2.parentElement.parentElement.parentElement;
    var table2Ths = table2.querySelectorAll("tr")[0].querySelectorAll("th");
    var table2Text0 = table2Ths[0].textContent;
    var table2Text1 = table2Ths[1].textContent;
    var trs = saleTable2.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = saleTable2.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(saleTable2.parentElement.parentElement.parentElement.querySelector('.u-title').textContent);
    var flagA = saleTable2.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');
    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'saleTable2',
      table2Text0: table2Text0,
      table2Text1: table2Text1,
      clickFlag: clickFlag,
      flagA: flagA
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl287_uZ8k6E: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable2 = elem.querySelector('table[id^="sale-table2"]');

    if (saleTable2 && 'saleTable2' == title) {
      var trs = saleTable2.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  } //排序
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable2 = elem.querySelector('table[id^="sale-table2"]');

    if (saleTable2 && 'saleTable2' == title) {
      var ths = saleTable2.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table2"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl287_uZ8k6E: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table2Text0}</span>\n                <span>{datas[0].businessData.table2Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n              {\n                datas && datas.map((item)=>{\n                   return (\n                     <div>\n                       {\n                         <DataGrid\n                         customData = {item.businessData}\n                         customHandler = {handler}                              \n                         />\n                       }\n                     </div>\n                   )\n                })\n              }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  //钻取\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  //排序\n  sortClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control291_UPBTUl: "if (!elem) {\n  return;\n}\nvar saleTable3 = elem.querySelector('table[id^=\"sale-table3\"]');\nvar echartDatas = [];\nif (saleTable3) {\n  var businessData = []; //销量和销售额总和\n\n  var table3 = saleTable3.parentElement.parentElement.parentElement;\n  var table3Ths = table3.querySelectorAll(\"tr\")[0].querySelectorAll(\"th\");\n  var table3Text0 = table3Ths[0].textContent;\n  var table3Text1 = table3Ths[1].textContent;\n  var trs = saleTable3.querySelectorAll('tr');\n  var titles = [];\n  var content = [];\n  [].forEach.call(trs, function (item, index) {\n    var tds = item.querySelectorAll('th');\n    tds = tds.length !== 0 ? tds : item.querySelectorAll('td');\n    var item = [];\n    [].forEach.call(tds, function (subItem, subIndex) {\n      //判断有“HUAWEI”字样的去掉此文字\n      if (subItem.tagName.toLocaleLowerCase() == \"th\") {\n        if (subIndex == 0) {\n          titles.push(ysp.customHelper.trim(subItem.textContent));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      } else {\n        if (subIndex == 0) {\n          var subString = subItem.textContent;\n\n          if (subString.indexOf(\"HUAWEI\") >= 0) {\n            subString = subString.split(\"HUAWEI\")[1];\n          }\n\n          titles.push(ysp.customHelper.trim(subString));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      }\n    });\n    content.push(item);\n  });\n  var flag = saleTable3.parentElement.nextElementSibling;\n  var flagUp = flag.classList.contains('Up');\n  var flagDown = flag.classList.contains('Down');\n  var textName = ysp.customHelper.trim(saleTable3.parentElement.parentElement.parentElement.querySelector('.u-title').textContent); //是否可以钻取标识\n\tvar flagA = saleTable3.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');\n  var clickFlag;\n\n  if (trs.length >= 2) {\n    clickFlag = trs[1] && trs[1].querySelectorAll(\"td\")[0].getElementsByTagName(\"a\").length;\n  } else {\n    clickFlag = \"\";\n  }\n\n  businessData = {\n    titles: titles,\n    content: content,\n    flagUp: flagUp,\n    flagDown: flagDown,\n    textName: textName,\n    businessTitle: 'saleTable3',\n    table3Text0: table3Text0,\n    table3Text1: table3Text1,\n    clickFlag: clickFlag,\n    flagA: flagA\n  };\n  var echartItem = {\n    echartData: {\n      datas: '',\n      titleText: ''\n    },\n    businessData: businessData\n  };\n  !!echartItem && echartDatas.push(echartItem);\n}\nreturn echartDatas;\n"
doAction_uiControl282_fBrGyT: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable3 = elem.querySelector('table[id^="sale-table3"]');

    if (saleTable3 && 'saleTable3' == title) {
      var trs = saleTable3.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable3 = elem.querySelector('table[id^="sale-table3"]');

    if (saleTable3 && 'saleTable3' == title) {
      var ths = saleTable3.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table3"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl282_fBrGyT: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table3Text0}</span>\n                <span>{datas[0].businessData.table3Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n              {\n                datas && datas.map((item)=>{\n                   return (\n                     <div>\n                       {\n                         <DataGrid\n                         customData = {item.businessData}\n                         customHandler = {handler}                              \n                         />\n                       }\n                     </div>\n                   )\n                })\n              }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  //排序\n  sortClick =(e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick'\n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control297_1IMG86: |
  if (!elem) {
    return;
  }
  // 111
  var bizUnitTable = elem.querySelector('table[id^="bizUnit-table"]');
  var echartDatas = [];
  if (bizUnitTable) {
    var businessData = [];
    var trs = bizUnitTable.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = bizUnitTable.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(bizUnitTable.parentElement.parentElement.previousElementSibling.textContent); //是否可以钻取标识

    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'bizUnitTable',
      clickFlag: clickFlag
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl288_bxQQop: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var bizUnitTable = elem.querySelector('table[id^="bizUnit-table"]');

    if (bizUnitTable && 'bizUnitTable' == title) {
      var trs = bizUnitTable.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var bizUnitTable = elem.querySelector('table[id^="bizUnit-table"]');

    if (bizUnitTable && 'bizUnitTable' == title) {
      var ths = bizUnitTable.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
getTemplate_uiControl288_bxQQop: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"branch\"></i>\n                <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick = (e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control298_u9CCfI: |
  if (!elem) {
    return;
  }
  var custTable = elem.querySelector('table[id^="cust-table"]');
  var echartDatas = [];
  if (custTable) {
    var businessData = [];
    var trs = custTable.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = custTable.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(custTable.parentElement.parentElement.previousElementSibling.textContent); //是否可以钻取标识

    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'custTable',
      clickFlag: clickFlag
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl289_izkz87: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var custTable = elem.querySelector('table[id^="cust-table"]');

    if (custTable && 'custTable' == title) {
      var trs = custTable.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var custTable = elem.querySelector('table[id^="cust-table"]');

    if (custTable && 'custTable' == title) {
      var ths = custTable.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
getTemplate_uiControl289_izkz87: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"custom\"></i>\n                <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>\n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control299_6Ow3Fz: |
  if (!elem) {
    return;
  }
  var officeTable = elem.querySelector('table[id^="office-table"]');
  var echartDatas = [];
  if (officeTable) {
    var businessData = [];
    var trs = officeTable.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = officeTable.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(officeTable.parentElement.parentElement.previousElementSibling.textContent); //是否可以钻取标识

    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'officeTable',
      clickFlag: clickFlag
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl290_nSh4gF: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var officeTable = elem.querySelector('table[id^="office-table"]');

    if (officeTable && 'officeTable' == title) {
      var trs = officeTable.querySelectorAll("tr");

      if (0 == index) {
        //排序
        var ths = trs[0].querySelectorAll("th");
        ths && ths[0].click();
      } else {
        //钻取
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  } //排序
  if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var officeTable = elem.querySelector('table[id^="office-table"]');

    if (officeTable && 'officeTable' == title) {
      var ths = officeTable.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (indexs == 1) {
          ths && ths[indexs].click();
        } else if (indexs == 2) {
          ths && ths[indexs].click();
        }
      }
    }
  }
getTemplate_uiControl290_nSh4gF: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"office\"></i>\n                <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>\n        }\n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick = (e) =>{\n    var title = e.currentTarget.dataset.title;\n    var index = e.currentTarget.dataset.index;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) :\n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control300_zQJbUV: |
  if (!elem) {
    return;
  }
  var projectTable = elem.querySelector('table[id^="project-table"]');
  var echartDatas = [];
  if (projectTable) {
    var businessData = [];
    var trs = projectTable.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = projectTable.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(projectTable.parentElement.parentElement.previousElementSibling.textContent); //是否可以钻取标识

    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'projectTable',
      clickFlag: clickFlag
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl291_RaewTZ: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var projectTable = elem.querySelector('table[id^="project-table"]');

    if (projectTable && 'projectTable' == title) {
      var trs = projectTable.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var projectTable = elem.querySelector('table[id^="project-table"]');

    if (projectTable && 'projectTable' == title) {
      var ths = projectTable.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
getTemplate_uiControl291_RaewTZ: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"branch\"></i>\n                <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>\n        }\n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control301_2EmTCf: "if (!elem) {\n  return;\n}\nvar saleTable4 = elem.querySelector('table[id^=\"sale-table4\"]');\nvar echartDatas = [];\nif (saleTable4) {\n  var businessData = []; //销量和销售额总和\n\n  var table4 = saleTable4.parentElement.parentElement.parentElement;\n  var table4Ths = table4.querySelectorAll(\"tr\")[0].querySelectorAll(\"th\");\n  var table4Text0 = table4Ths[0].textContent;\n  var table4Text1 = table4Ths[1].textContent;\n  var trs = saleTable4.querySelectorAll('tr');\n  var titles = [];\n  var content = [];\n  [].forEach.call(trs, function (item, index) {\n    var tds = item.querySelectorAll('th');\n    tds = tds.length !== 0 ? tds : item.querySelectorAll('td');\n    var item = [];\n    [].forEach.call(tds, function (subItem, subIndex) {\n      // if (subIndex == 0) {\n      //   titles.push(ysp.customHelper.trim(subItem.textContent));\n      // } else {\n      //   item.push(ysp.customHelper.trim(subItem.textContent));\n      // }\n      //判断有“HUAWEI”字样的去掉此文字\n      if (subItem.tagName.toLocaleLowerCase() == \"th\") {\n        if (subIndex == 0) {\n          titles.push(ysp.customHelper.trim(subItem.textContent));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      } else {\n        if (subIndex == 0) {\n          var subString = subItem.textContent;\n\n          if (subString.indexOf(\"HUAWEI\") >= 0) {\n            subString = subString.split(\"HUAWEI\")[1];\n          }\n\n          titles.push(ysp.customHelper.trim(subString));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      }\n    });\n    content.push(item);\n  });\n  var flag = saleTable4.parentElement.nextElementSibling;\n  var flagUp = flag.classList.contains('Up');\n  var flagDown = flag.classList.contains('Down');\n  var textName = ysp.customHelper.trim(saleTable4.parentElement.parentElement.parentElement.querySelector('.u-title').textContent); //是否可以钻取标识\n\tvar flagA = saleTable4.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');\n  var clickFlag;\n\n  if (trs.length >= 2) {\n    clickFlag = trs[1] && trs[1].querySelectorAll(\"td\")[0].getElementsByTagName(\"a\").length;\n  } else {\n    clickFlag = \"\";\n  }\n\n  businessData = {\n    titles: titles,\n    content: content,\n    flagUp: flagUp,\n    flagDown: flagDown,\n    textName: textName,\n    businessTitle: 'saleTable4',\n    table4Text0: table4Text0,\n    table4Text1: table4Text1,\n    clickFlag: clickFlag,\n    flagA: flagA\n  };\n  var echartItem = {\n    echartData: {\n      datas: '',\n      titleText: ''\n    },\n    businessData: businessData\n  };\n  !!echartItem && echartDatas.push(echartItem);\n}\nreturn echartDatas;\n"
doAction_uiControl292_slttkZ: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable4 = elem.querySelector('table[id^="sale-table4"]');

    if (saleTable4 && 'saleTable4' == title) {
      var trs = saleTable4.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable4 = elem.querySelector('table[id^="sale-table4"]');

    if (saleTable4 && 'saleTable4' == title) {
      var ths = saleTable4.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table4"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl292_slttkZ: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table4Text0}</span>\n                <span>{datas[0].businessData.table4Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control302_aKUihk: "if (!elem) {\n  return;\n}\nvar saleTable5 = elem.querySelector('table[id^=\"sale-table5\"]');\nvar echartDatas = [];\nif (saleTable5) {\n  var businessData = []; //销量和销售额总和\n\n  var table5 = saleTable5.parentElement.parentElement.parentElement;\n  var table5Ths = table5.querySelectorAll(\"tr\")[0].querySelectorAll(\"th\");\n  var table5Text0 = table5Ths[0].textContent;\n  var table5Text1 = table5Ths[1].textContent;\n  var trs = saleTable5.querySelectorAll('tr');\n  var titles = [];\n  var content = [];\n  [].forEach.call(trs, function (item, index) {\n    var tds = item.querySelectorAll('th');\n    tds = tds.length !== 0 ? tds : item.querySelectorAll('td');\n    var item = [];\n    [].forEach.call(tds, function (subItem, subIndex) {\n      // if (subIndex == 0) {\n      //   titles.push(ysp.customHelper.trim(subItem.textContent));\n      // } else {\n      //   item.push(ysp.customHelper.trim(subItem.textContent));\n      // }\n      //判断有“HUAWEI”字样的去掉此文字\n      if (subItem.tagName.toLocaleLowerCase() == \"th\") {\n        if (subIndex == 0) {\n          titles.push(ysp.customHelper.trim(subItem.textContent));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      } else {\n        if (subIndex == 0) {\n          var subString = subItem.textContent;\n\n          if (subString.indexOf(\"HUAWEI\") >= 0) {\n            subString = subString.split(\"HUAWEI\")[1];\n          }\n\n          titles.push(ysp.customHelper.trim(subString));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      }\n    });\n    content.push(item);\n  });\n  var flag = saleTable5.parentElement.nextElementSibling;\n  var flagUp = flag.classList.contains('Up');\n  var flagDown = flag.classList.contains('Down');\n  var textName = ysp.customHelper.trim(saleTable5.parentElement.parentElement.parentElement.querySelector('.u-title').textContent); //是否可以钻取标识\n\tvar flagA = saleTable5.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');\n  var clickFlag;\n\n  if (trs.length >= 2) {\n    clickFlag = trs[1] && trs[1].querySelectorAll(\"td\")[0].getElementsByTagName(\"a\").length;\n  } else {\n    clickFlag = \"\";\n  }\n\n  businessData = {\n    titles: titles,\n    content: content,\n    flagUp: flagUp,\n    flagDown: flagDown,\n    textName: textName,\n    businessTitle: 'saleTable5',\n    table5Text0: table5Text0,\n    table5Text1: table5Text1,\n    clickFlag: clickFlag,\n    flagA: flagA\n  };\n  var echartItem = {\n    echartData: {\n      datas: '',\n      titleText: ''\n    },\n    businessData: businessData\n  };\n  !!echartItem && echartDatas.push(echartItem);\n}\nreturn echartDatas;\n"
doAction_uiControl293_kyeDPS: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable5 = elem.querySelector('table[id^="sale-table5"]');

    if (saleTable5 && 'saleTable5' == title) {
      var trs = saleTable5.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable5 = elem.querySelector('table[id^="sale-table5"]');

    if (saleTable5 && 'saleTable5' == title) {
      var ths = saleTable5.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table5"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl293_kyeDPS: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table5Text0}</span>\n                <span>{datas[0].businessData.table5Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n              {\n                datas && datas.map((item)=>{\n                   return (\n                     <div>\n                       {\n                         <DataGrid\n                         customData = {item.businessData}\n                         customHandler = {handler}                              \n                         />\n                       }\n                     </div>\n                   )\n                })\n              }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control303_vV8TBO: "if (!elem) {\n  return;\n}\nvar saleTable6 = elem.querySelector('table[id^=\"sale-table6\"]');\nvar echartDatas = [];\nif (saleTable6) {\n  var businessData = []; //销量和销售额总和\n\n  var table6 = saleTable6.parentElement.parentElement.parentElement;\n  var table6Ths = table6.querySelectorAll(\"tr\")[0].querySelectorAll(\"th\");\n  var table6Text0 = table6Ths[0].textContent;\n  var table6Text1 = table6Ths[1].textContent;\n  var trs = saleTable6.querySelectorAll('tr');\n  var titles = [];\n  var content = [];\n  [].forEach.call(trs, function (item, index) {\n    var tds = item.querySelectorAll('th');\n    tds = tds.length !== 0 ? tds : item.querySelectorAll('td');\n    var item = [];\n    [].forEach.call(tds, function (subItem, subIndex) {\n      // if (subIndex == 0) {\n      //   titles.push(ysp.customHelper.trim(subItem.textContent));\n      // } else {\n      //   item.push(ysp.customHelper.trim(subItem.textContent));\n      // }\n      //判断有“HUAWEI”字样的去掉此文字\n      if (subItem.tagName.toLocaleLowerCase() == \"th\") {\n        if (subIndex == 0) {\n          titles.push(ysp.customHelper.trim(subItem.textContent));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      } else {\n        if (subIndex == 0) {\n          var subString = subItem.textContent;\n\n          if (subString.indexOf(\"HUAWEI\") >= 0) {\n            subString = subString.split(\"HUAWEI\")[1];\n          }\n\n          titles.push(ysp.customHelper.trim(subString));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      }\n    });\n    content.push(item);\n  });\n  var flag = saleTable6.parentElement.nextElementSibling;\n  var flagUp = flag.classList.contains('Up');\n  var flagDown = flag.classList.contains('Down');\n  var textName = ysp.customHelper.trim(saleTable6.parentElement.parentElement.parentElement.querySelector('.u-title').textContent); //是否可以钻取标识\n\tvar flagA = saleTable6.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');\n  var clickFlag;\n\n  if (trs.length >= 2) {\n    clickFlag = trs[1] && trs[1].querySelectorAll(\"td\")[0].getElementsByTagName(\"a\").length;\n  } else {\n    clickFlag = \"\";\n  }\n\n  businessData = {\n    titles: titles,\n    content: content,\n    flagUp: flagUp,\n    flagDown: flagDown,\n    textName: textName,\n    businessTitle: 'saleTable6',\n    table6Text0: table6Text0,\n    table6Text1: table6Text1,\n    clickFlag: clickFlag,\n    flagA: flagA\n  };\n  var echartItem = {\n    echartData: {\n      datas: '',\n      titleText: ''\n    },\n    businessData: businessData\n  };\n  !!echartItem && echartDatas.push(echartItem);\n}\nreturn echartDatas;\n"
doAction_uiControl294_iNouQQ: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable6 = elem.querySelector('table[id^="sale-table6"]');

    if (saleTable6 && 'saleTable6' == title) {
      var trs = saleTable6.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable6 = elem.querySelector('table[id^="sale-table6"]');

    if (saleTable6 && 'saleTable6' == title) {
      var ths = saleTable6.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table6"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl294_iNouQQ: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table6Text0}</span>\n                <span>{datas[0].businessData.table6Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  \n  sortClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control304_v1JR0a: "if (!elem) {\n  return;\n}\nvar saleTable7 = elem.querySelector('table[id^=\"sale-table7\"]');\nvar echartDatas = [];\nif (saleTable7) {\n  var businessData = []; //销量和销售额总和\n\n  var table7 = saleTable7.parentElement.parentElement.parentElement;\n  var table7Ths = table7.querySelectorAll(\"tr\")[0].querySelectorAll(\"th\");\n  var table7Text0 = table7Ths[0].textContent;\n  var table7Text1 = table7Ths[1].textContent;\n  var trs = saleTable7.querySelectorAll('tr');\n  var titles = [];\n  var content = [];\n  [].forEach.call(trs, function (item, index) {\n    var tds = item.querySelectorAll('th');\n    tds = tds.length !== 0 ? tds : item.querySelectorAll('td');\n    var item = [];\n    [].forEach.call(tds, function (subItem, subIndex) {\n      // if (subIndex == 0) {\n      //   titles.push(ysp.customHelper.trim(subItem.textContent));\n      // } else {\n      //   item.push(ysp.customHelper.trim(subItem.textContent));\n      // }\n      //判断有“HUAWEI”字样的去掉此文字\n      if (subItem.tagName.toLocaleLowerCase() == \"th\") {\n        if (subIndex == 0) {\n          titles.push(ysp.customHelper.trim(subItem.textContent));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      } else {\n        if (subIndex == 0) {\n          var subString = subItem.textContent;\n\n          if (subString.indexOf(\"HUAWEI\") >= 0) {\n            subString = subString.split(\"HUAWEI\")[1];\n          }\n\n          titles.push(ysp.customHelper.trim(subString));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      }\n    });\n    content.push(item);\n  });\n  var flag = saleTable7.parentElement.nextElementSibling;\n  var flagUp = flag.classList.contains('Up');\n  var flagDown = flag.classList.contains('Down');\n  var textName = ysp.customHelper.trim(saleTable7.parentElement.parentElement.parentElement.querySelector('.u-title').textContent); //是否可以钻取标识\n\tvar flagA = saleTable7.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');\n  var clickFlag;\n\n  if (trs.length >= 2) {\n    clickFlag = trs[1] && trs[1].querySelectorAll(\"td\")[0].getElementsByTagName(\"a\").length;\n  } else {\n    clickFlag = \"\";\n  }\n\n  businessData = {\n    titles: titles,\n    content: content,\n    flagUp: flagUp,\n    flagDown: flagDown,\n    textName: textName,\n    businessTitle: 'saleTable7',\n    table7Text0: table7Text0,\n    table7Text1: table7Text1,\n    clickFlag: clickFlag,\n    flagA: flagA\n  };\n  var echartItem = {\n    echartData: {\n      datas: '',\n      titleText: ''\n    },\n    businessData: businessData\n  };\n  !!echartItem && echartDatas.push(echartItem);\n}\nreturn echartDatas;\n"
doAction_uiControl295_gOVmcq: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable7 = elem.querySelector('table[id^="sale-table7"]');

    if (saleTable7 && 'saleTable7' == title) {
      var trs = saleTable7.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable7 = elem.querySelector('table[id^="sale-table7"]');

    if (saleTable7 && 'saleTable7' == title) {
      var ths = saleTable7.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table7"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl295_gOVmcq: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n                {\n                  datas[0].businessData.flagA?\n                  <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                  :\n                  <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table7Text0}</span>\n                <span>{datas[0].businessData.table7Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control305_Szxh2c: "if (!elem) {\n  return;\n}\nvar saleTable8 = elem.querySelector('table[id^=\"sale-table8\"]');\nvar echartDatas = [];\nif (saleTable8) {\n  var businessData = []; //销量和销售额总和\n\n  var table8 = saleTable8.parentElement.parentElement.parentElement;\n  var table8Ths = table8.querySelectorAll(\"tr\")[0].querySelectorAll(\"th\");\n  var table8Text0 = table8Ths[0].textContent;\n  var table8Text1 = table8Ths[1].textContent;\n  var trs = saleTable8.querySelectorAll('tr');\n  var titles = [];\n  var content = [];\n  [].forEach.call(trs, function (item, index) {\n    var tds = item.querySelectorAll('th');\n    tds = tds.length !== 0 ? tds : item.querySelectorAll('td');\n    var item = [];\n    [].forEach.call(tds, function (subItem, subIndex) {\n      // if (subIndex == 0) {\n      //   titles.push(ysp.customHelper.trim(subItem.textContent));\n      // } else {\n      //   item.push(ysp.customHelper.trim(subItem.textContent));\n      // }\n      //判断有“HUAWEI”字样的去掉此文字\n      if (subItem.tagName.toLocaleLowerCase() == \"th\") {\n        if (subIndex == 0) {\n          titles.push(ysp.customHelper.trim(subItem.textContent));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      } else {\n        if (subIndex == 0) {\n          var subString = subItem.textContent;\n\n          if (subString.indexOf(\"HUAWEI\") >= 0) {\n            subString = subString.split(\"HUAWEI\")[1];\n          }\n\n          titles.push(ysp.customHelper.trim(subString));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      }\n    });\n    content.push(item);\n  });\n  var flag = saleTable8.parentElement.nextElementSibling;\n  var flagUp = flag.classList.contains('Up');\n  var flagDown = flag.classList.contains('Down');\n  var textName = ysp.customHelper.trim(saleTable8.parentElement.parentElement.parentElement.querySelector('.u-title').textContent); //是否可以钻取标识\n\tvar flagA = saleTable8.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');\n  var clickFlag;\n\n  if (trs.length >= 2) {\n    clickFlag = trs[1] && trs[1].querySelectorAll(\"td\")[0].getElementsByTagName(\"a\").length;\n  } else {\n    clickFlag = \"\";\n  }\n\n  businessData = {\n    titles: titles,\n    content: content,\n    flagUp: flagUp,\n    flagDown: flagDown,\n    textName: textName,\n    businessTitle: 'saleTable8',\n    table8Text0: table8Text0,\n    table8Text1: table8Text1,\n    clickFlag: clickFlag,\n    flagA: flagA\n  };\n  var echartItem = {\n    echartData: {\n      datas: '',\n      titleText: ''\n    },\n    businessData: businessData\n  };\n  !!echartItem && echartDatas.push(echartItem);\n}\nreturn echartDatas;\n"
doAction_uiControl296_FeClUy: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable8 = elem.querySelector('table[id^="sale-table8"]');

    if (saleTable8 && 'saleTable8' == title) {
      var trs = saleTable8.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable8 = elem.querySelector('table[id^="sale-table8"]');

    if (saleTable8 && 'saleTable8' == title) {
      var ths = saleTable8.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table8"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl296_FeClUy: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table8Text0}</span>\n                <span>{datas[0].businessData.table8Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n              {\n                datas && datas.map((item)=>{\n                   return (\n                     <div>\n                       {\n                         <DataGrid\n                         customData = {item.businessData}\n                         customHandler = {handler}                              \n                         />\n                       }\n                     </div>\n                   )\n                })\n              }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control306_mmxX0Q: "if (!elem) {\n  return;\n}\nvar saleTable9 = elem.querySelector('table[id^=\"sale-table9\"]');\nvar echartDatas = [];\nif (saleTable9) {\n  var businessData = []; //销量和销售额总和\n\n  var table9 = saleTable9.parentElement.parentElement.parentElement;\n  var table9Ths = table9.querySelectorAll(\"tr\")[0].querySelectorAll(\"th\");\n  var table9Text0 = table9Ths[0].textContent;\n  var table9Text1 = table9Ths[1].textContent;\n  var trs = saleTable9.querySelectorAll('tr');\n  var titles = [];\n  var content = [];\n  [].forEach.call(trs, function (item, index) {\n    var tds = item.querySelectorAll('th');\n    tds = tds.length !== 0 ? tds : item.querySelectorAll('td');\n    var item = [];\n    [].forEach.call(tds, function (subItem, subIndex) {\n      // if (subIndex == 0) {\n      //   titles.push(ysp.customHelper.trim(subItem.textContent));\n      // } else {\n      //   item.push(ysp.customHelper.trim(subItem.textContent));\n      // }\n      //判断有“HUAWEI”字样的去掉此文字\n      if (subItem.tagName.toLocaleLowerCase() == \"th\") {\n        if (subIndex == 0) {\n          titles.push(ysp.customHelper.trim(subItem.textContent));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      } else {\n        if (subIndex == 0) {\n          var subString = subItem.textContent;\n\n          if (subString.indexOf(\"HUAWEI\") >= 0) {\n            subString = subString.split(\"HUAWEI\")[1];\n          }\n\n          titles.push(ysp.customHelper.trim(subString));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      }\n    });\n    content.push(item);\n  });\n  var flag = saleTable9.parentElement.nextElementSibling;\n  var flagUp = flag.classList.contains('Up');\n  var flagDown = flag.classList.contains('Down');\n  var textName = ysp.customHelper.trim(saleTable9.parentElement.parentElement.parentElement.querySelector('.u-title').textContent);//是否可以钻取标识\n\tvar flagA = saleTable9.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');\n  var clickFlag;\n\n  if (trs.length >= 2) {\n    clickFlag = trs[1] && trs[1].querySelectorAll(\"td\")[0].getElementsByTagName(\"a\").length;\n  } else {\n    clickFlag = \"\";\n  }\n\n  businessData = {\n    titles: titles,\n    content: content,\n    flagUp: flagUp,\n    flagDown: flagDown,\n    textName: textName,\n    businessTitle: 'saleTable9',\n    table9Text0: table9Text0,\n    table9Text1: table9Text1,\n    clickFlag: clickFlag,\n    flagA: flagA\n  };\n  var echartItem = {\n    echartData: {\n      datas: '',\n      titleText: ''\n    },\n    businessData: businessData\n  };\n  !!echartItem && echartDatas.push(echartItem);\n}\nreturn echartDatas;\n"
doAction_uiControl297_ToZ84m: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable9 = elem.querySelector('table[id^="sale-table9"]');

    if (saleTable9 && 'saleTable9' == title) {
      var trs = saleTable9.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable9 = elem.querySelector('table[id^="sale-table9"]');

    if (saleTable9 && 'saleTable9' == title) {
      var ths = saleTable9.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table9"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl297_ToZ84m: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table9Text0}</span>\n                <span>{datas[0].businessData.table9Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n              {\n                datas && datas.map((item)=>{\n                   return (\n                     <div>\n                       {\n                         <DataGrid\n                         customData = {item.businessData}\n                         customHandler = {handler}                              \n                         />\n                       }\n                     </div>\n                   )\n                })\n              }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  \n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                      \titem.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control307_KGyTVW: "if (!elem) {\n  return;\n}\nvar saleTable10 = elem.querySelector('table[id^=\"sale-table10\"]');\nvar echartDatas = [];\nif (saleTable10) {\n  var businessData = []; //销量和销售额总和\n\n  var table10 = saleTable10.parentElement.parentElement.parentElement;\n  var table10Ths = table10.querySelectorAll(\"tr\")[0].querySelectorAll(\"th\");\n  var table10Text0 = table10Ths[0].textContent;\n  var table10Text1 = table10Ths[1].textContent;\n  var trs = saleTable10.querySelectorAll('tr');\n  var titles = [];\n  var content = [];\n  [].forEach.call(trs, function (item, index) {\n    var tds = item.querySelectorAll('th');\n    tds = tds.length !== 0 ? tds : item.querySelectorAll('td');\n    var item = [];\n    [].forEach.call(tds, function (subItem, subIndex) {\n      // if (subIndex == 0) {\n      //   titles.push(ysp.customHelper.trim(subItem.textContent));\n      // } else {\n      //   item.push(ysp.customHelper.trim(subItem.textContent));\n      // }\n      //判断有“HUAWEI”字样的去掉此文字\n      if (subItem.tagName.toLocaleLowerCase() == \"th\") {\n        if (subIndex == 0) {\n          titles.push(ysp.customHelper.trim(subItem.textContent));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      } else {\n        if (subIndex == 0) {\n          var subString = subItem.textContent;\n\n          if (subString.indexOf(\"HUAWEI\") >= 0) {\n            subString = subString.split(\"HUAWEI\")[1];\n          }\n\n          titles.push(ysp.customHelper.trim(subString));\n        } else {\n          item.push(ysp.customHelper.trim(subItem.textContent));\n        }\n      }\n    });\n    content.push(item);\n  });\n  var flag = saleTable10.parentElement.nextElementSibling;\n  var flagUp = flag.classList.contains('Up');\n  var flagDown = flag.classList.contains('Down');\n  var textName = ysp.customHelper.trim(saleTable10.parentElement.parentElement.parentElement.querySelector('.u-title').textContent); //是否可以钻取标识\n\tvar flagA = saleTable10.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');\n  var clickFlag;\n\n  if (trs.length >= 2) {\n    clickFlag = trs[1] && trs[1].querySelectorAll(\"td\")[0].getElementsByTagName(\"a\").length;\n  } else {\n    clickFlag = \"\";\n  }\n\n  businessData = {\n    titles: titles,\n    content: content,\n    flagUp: flagUp,\n    flagDown: flagDown,\n    textName: textName,\n    businessTitle: 'saleTable10',\n    table10Text0: table10Text0,\n    table10Text1: table10Text1,\n    clickFlag: clickFlag,\n    flagA: flagA\n  };\n  var echartItem = {\n    echartData: {\n      datas: '',\n      titleText: ''\n    },\n    businessData: businessData\n  };\n  !!echartItem && echartDatas.push(echartItem);\n}\nreturn echartDatas;\n"
doAction_uiControl298_W0QHtT: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable10 = elem.querySelector('table[id^="sale-table10"]');

    if (saleTable10 && 'saleTable10' == title) {
      var trs = saleTable10.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable10 = elem.querySelector('table[id^="sale-table10"]');

    if (saleTable10 && 'saleTable10' == title) {
      var ths = saleTable10.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table10"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl298_W0QHtT: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table10Text0}</span>\n                <span>{datas[0].businessData.table10Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n              {\n                datas && datas.map((item)=>{\n                   return (\n                     <div>\n                       {\n                         <DataGrid\n                         customData = {item.businessData}\n                         customHandler = {handler}                              \n                         />\n                       }\n                     </div>\n                   )\n                })\n              }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control308_zMrTNa: |
  if (!elem) {
    return;
  }
  var saleTable11 = elem.querySelector('table[id^="sale-table11"]');
  var echartDatas = [];
  if (saleTable11) {
    var businessData = []; //销量和销售额总和

    var table11 = saleTable11.parentElement.parentElement.parentElement;
    var table11Ths = table11.querySelectorAll("tr")[0].querySelectorAll("th");
    var table11Text0 = table11Ths[0].textContent;
    var table11Text1 = table11Ths[1].textContent;
    var trs = saleTable11.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = saleTable11.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(saleTable11.parentElement.parentElement.parentElement.querySelector('.u-title').textContent); //是否可以钻取标识
    var flagA = saleTable11.parentElement.parentElement.parentElement.querySelector('.u-title').querySelector('a');
    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'saleTable11',
      table11Text0: table11Text0,
      table11Text1: table11Text1,
      clickFlag: clickFlag,
      flagA: flagA
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl299_K26ukz: |-
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var saleTable11 = elem.querySelector('table[id^="sale-table11"]');

    if (saleTable11 && 'saleTable11' == title) {
      var trs = saleTable11.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  else if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var saleTable11 = elem.querySelector('table[id^="sale-table11"]');

    if (saleTable11 && 'saleTable11' == title) {
      var ths = saleTable11.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
  else if ('unitClick' == data.eventType) {
    var title = elem.querySelector('table[id^="sale-table11"]').parentElement.parentElement.parentElement.querySelector('.u-title');
    if(title.querySelector('a')){
      title.querySelector('a').click();
    }
  }
getTemplate_uiControl299_K26ukz: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\tunitClick(){\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        eventType: 'unitClick' \n      })\n    }\n  }\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container'>\n                <i className=\"bouquet\"></i>\n              {\n                datas[0].businessData.flagA?\n                <span onClick={this.unitClick.bind(this)} style={{'color':'#4796ed'}}>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                :\n              \t<span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n              }\n                <i className={this.state.active ? 'active' : ''} onClick={this.handlerClick.bind(this)}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n              <div className=\"ysp-sale-achievement-sum\">\n                <span>{datas[0].businessData.table11Text0}</span>\n                <span>{datas[0].businessData.table11Text1}</span>\n              </div>\n              <div className=\"ysp-sale-achievement-sum-text\">\n                <span>销量(台)</span>\n                <span>销售额(万)</span>\n              </div>\n              {\n                datas && datas.map((item)=>{\n                   return (\n                     <div>\n                       {\n                         <DataGrid\n                         customData = {item.businessData}\n                         customHandler = {handler}                              \n                         />\n                       }\n                     </div>\n                   )\n                })\n              }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control309_l1dl7U: |
  if (!elem) {
    return;
  }
  var branchTable = elem.querySelector('table[id^="branch-table"]');
  var echartDatas = [];
  if (branchTable) {
    var businessData = [];
    var trs = branchTable.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = branchTable.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(branchTable.parentElement.parentElement.previousElementSibling.textContent); //是否可以钻取标识

    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'branchTable',
      clickFlag: clickFlag
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl300_Oac3Ox: |
  if ('dbClick' == data.eventType) {
    var title = data.customData.title;
    var index = data.customData.index;
    var branchTable = elem.querySelector('table[id^="branch-table"]');

    if (branchTable && 'branchTable' == title) {
      var trs = branchTable.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var branchTable = elem.querySelector('table[id^="branch-table"]');

    if (branchTable && 'branchTable' == title) {
      var ths = branchTable.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
getTemplate_uiControl300_Oac3Ox: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"branch\"></i>\n                <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>  \n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index = {subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control377_T1XqzN: |
  if (elem) {
    var data = {};
    data.option = [];
    var doc = elem.ownerDocument;
    var selectData = doc.querySelector('#selectSearch');
    data.selectedNum = selectData.selectedIndex;

    for (var i = 0; i < selectData.querySelectorAll('option').length; i++) {
      data.option.push(selectData.querySelectorAll('option')[i].textContent);
    }

    return data;
  }
doAction_uiControl363_TxOQVT: |
  if (data.eventType == 'click') {
    elem.querySelector('#searchInput').value = data.dataCustom; // elem.querySelector('#searchBtn').click();
  } else if (data.eventType == 'change') {
    var select = elem.ownerDocument.querySelector('#selectSearch');
    select.value = select.querySelectorAll('option')[parseInt(data.dataCustom)].value;
    select.dispatchEvent(new Event('change'));
  }
getTemplate_uiControl363_TxOQVT: "import {Component} from 'react';\nimport {CostomerSerchSwitch} from 'ysp-custom-components';\nexport default class extends Component{\n  constructor(){\n    super();\n    this.state={\n      buttonState : false,\n      commitState : false,\n      commitStateBtn : false,\n      width:false,\n      flag: true\n    }\n  }\n  click(e){\n    var _this = this;\n    var handler = this.props.customHandler;\n      if(handler){\n        handler({\n          data:e.target.previousSibling.value,\n          eventType:'click'\n        })\n      }\n      _this.setState({\n        buttonState : false,\n        commitState : false,\n        commitStateBtn : false,\n        width:false,\n        flag:true\n      })\n    // e.target.previousSibling.value = '';\n  }\n  select(e){\n    var _this = this;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data:e.target.selectedIndex,\n        eventType:'change'\n      })\n    }\n  }\n  render(){\n    var _this = this;\n    var data = this.props.data.customData;\n    return(\n    \t<div id='customSerchSwitch'>\n        \t<select onChange={_this.select.bind(_this)} className='serchSelect' style={{'display':this.state.width && this.props.width?'none':'inlineBlock'}}>\n        \t\t{\n              data&&data.option&&data.option.map(function(d,i){\n                return(i==data.selectedNum?<option selected>{d}</option>:<option>{d}</option>)\n              })\n            }\n        \t</select>\n          <input className='customSerchSwitch' placeholder='搜索'  style={{width:this.state.width && this.props.width ? '80%' : '60%'}} onFocus={(e)=>{\n            let _this = this;\n            _this.setState({\n              buttonState:true,\n              commitState:true,\n              width:true\n            })\n            _this.props.commitStateBtn = true;\n            _this.props.buttonState = true;\n            _this.props.width = true;\n            e.target.value = '';\n            // 处理遮罩多屏滚动问题吧\n            e.target.offsetParent.style.overflow = 'hidden';\n          }} onBlur={(e)=>{\n            (e.target.offsetParent.className.indexOf('view-wrapper') !== -1 || e.target.offsetParent.className.indexOf('dialog-wrapper') !== -1)? e.target.offsetParent.style.overflow = 'auto' : '';\n            var _this = this;\n            this.setState({\n \_ \_ \_ \_ \_ \_ \_commitState:false,\n \_ \_ \_ \_ \_  })\n            var target = e.target;\n           setTimeout(function(){\n            _this.setState({\n              buttonState:false,\n              width:false\n            })\n            target.parentElement.querySelector('select').style.display = 'inline-block';\n           },300);\n          }}\n          />\n          { this.state.buttonState &&  this.props.buttonState && <button className='serch-btn' onClick={_this.click.bind(_this)} >搜索</button> }\n        \t<div className={this.props.flag == true ? 'commitSearch-moudle' : this.props.flag == false ? 'commitSearches-moudle' : 'commitState-moudle' }>{\n               this.state.commitState &&<div className='module-serch' onClick={(e)=>{\n \_ \_ \_ \_ \_ \_ \_ \_ \_ \_e.target.parentElement.parentElement.firstChild.value = ''\n                    let _this = this;\n                    _this.setState({\n                      buttonState:false,\n                      commitState:false,\n                      width:false\n                    })\n                    _this.props.commitStateBtn = true;\n                  \t_this.props.buttonState = true;\n                    _this.props.width = true;\n                  }}>\n                </div>\n            }</div>\n      </div>\n    )\n  }\n}"
getTemplate_uiControl120_FgcMoT: "export default class extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n    \tactive: true,\n    }\n  }\n  handlerClick(){\n    this.setState({active: !this.state.active})\n  }\n\n  render() {\n    var datas = this.props.customData || [];\n    var handler = this.props.customHandler;\n    return (\n      <div ref=\"root\" style={{padding:'0 5px'}}>\n        {\n          datas.length != 0\n            ? \n          <div className='ysp-sale-achievement-header-wrapper'>\n            <div className='ysp-sale-achievement-header-container' onClick={this.handlerClick.bind(this)}>\n                <i className=\"custom\"></i>\n                <span>{datas.length !=0 ? datas[0].businessData.textName : \"\"}</span>\n                <i className={this.state.active ? 'active' : ''}></i>\n            </div>\n            <div style = {{display : this.state.active ? 'block' : 'none' }}>\n                {\n                  datas && datas.map((item)=>{\n                     return (\n                       <div>\n                         {\n                           <DataGrid\n                           customData = {item.businessData}\n                           customHandler = {handler}                              \n                           />\n                         }\n                       </div>\n                     )\n                  })\n                }\n           </div>\n        \t</div>\n            :\n          <div></div>\n        }\n        \n      </div>\n    );\n  }\n  componentDidMount(){\n    this.tooltip = new ToolTip(this.refs.root);\n  }\n  componentWillUnmount(){\n    this.tooltip.unregister();\n  }\n}\n\nclass DataGrid extends React.Component{\n  constructor(props){\n    super(props);\n    this.state = {open:false}\n  }\n  switch(){\n    this.setState({open:!this.state.open})\n  }\n  dbClick = (e) =>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'dbClick' \n      })\n    }\n  }\n  sortClick=(e)=>{\n    var index = e.currentTarget.dataset.index;\n    var title = e.currentTarget.dataset.title;\n    var handler = this.props.customHandler;\n    if(handler){\n      handler({\n        data: {\n          index:index,\n          title:title\n        },\n        eventType: 'sortClick' \n      })\n    }\n  }\n  render(){\n    var businessData = this.props.customData || [];\n    return(\n       <div>\n        {\n          businessData.flagUp == false && businessData.flagDown == false ? \n          <div className=\"ysp-sale-achievement-grid-wrapper\" style={{width: '98%'}}>\n            <div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n              <div></div>\n            </div>\n            <div className=\"ysp-sale-achievement-grid-content\">\n               <div>{businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''} onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true} >{item}</span></span>)}</div>\n            <div>\n               <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n            </div>\n           </div>\n          \t<div className=\"ysp-sale-achievement-grid-expand\">\n           </div> \n        \t</div>\n            : \n        \t<div className={!this.state.open ? \"ysp-sale-achievement-grid-pullDown-wrapper\" : \"ysp-sale-achievement-grid-wrapper\"} style={{width: '98%'}}>\n          \t<div className=\"ysp-sale-achievement-grid-overlay\" style={{width:'inherit'}}>\n            <div></div>\n          </div>\n          \t<div className=\"ysp-sale-achievement-grid-content\">\n             <div>\n               {businessData && businessData.titles && businessData.titles.map((item,index)=><span className= {businessData.clickFlag == \"\" || businessData.clickFlag == 0 ? 'ysp-sale-achievement-text-color' : ''}  onClick={this.dbClick.bind(this)} data-index = {index}  data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}><span data-item-tiptool={true}>{item}</span></span>)}</div>\n             <div>\n                 <table>\n                 {businessData && businessData.content && businessData.content.map((item,index)=>\n                   <tr>{\n                        item.map((subItem,subIndex)=>{\n                          return index == 0 ? \n                            (<th onClick={this.sortClick.bind(this)} data-index={subIndex} data-title = {businessData.businessTitle != '' ? businessData.businessTitle : businessData.textName}>{subItem}</th>) : \n                          \t(<td>{subItem}</td>)})}</tr>\n                 )}\n               </table>\n             </div>\n           </div>\n        \t  <div className=\"ysp-sale-achievement-grid-expand\" onClick = {this.switch.bind(this)}>\n          \t<span className=\"ysp-sale-achievement-grid-expand-icon\"></span>\n           </div>   \n        \t</div>  \n        }\n       </div>\n    );\n  }\n}"
getData_control122_QwTVfy: |
  if (!elem) {
    return;
  }
  var custTable = elem.querySelector('table[id^="store-table"]');
  var echartDatas = [];
  if (custTable) {
    var businessData = [];
    var trs = custTable.querySelectorAll('tr');
    var titles = [];
    var content = [];
    [].forEach.call(trs, function (item, index) {
      var tds = item.querySelectorAll('th');
      tds = tds.length !== 0 ? tds : item.querySelectorAll('td');
      var item = [];
      [].forEach.call(tds, function (subItem, subIndex) {
        // if (subIndex == 0) {
        //   titles.push(ysp.customHelper.trim(subItem.textContent));
        // } else {
        //   item.push(ysp.customHelper.trim(subItem.textContent));
        // }
        //判断有“HUAWEI”字样的去掉此文字
        if (subItem.tagName.toLocaleLowerCase() == "th") {
          if (subIndex == 0) {
            titles.push(ysp.customHelper.trim(subItem.textContent));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        } else {
          if (subIndex == 0) {
            var subString = subItem.textContent;

            if (subString.indexOf("HUAWEI") >= 0) {
              subString = subString.split("HUAWEI")[1];
            }

            titles.push(ysp.customHelper.trim(subString));
          } else {
            item.push(ysp.customHelper.trim(subItem.textContent));
          }
        }
      });
      content.push(item);
    });
    var flag = custTable.parentElement.nextElementSibling;
    var flagUp = flag.classList.contains('Up');
    var flagDown = flag.classList.contains('Down');
    var textName = ysp.customHelper.trim(custTable.parentElement.parentElement.previousElementSibling.textContent); //是否可以钻取标识

    var clickFlag;

    if (trs.length >= 2) {
      clickFlag = trs[1] && trs[1].querySelectorAll("td")[0].getElementsByTagName("a").length;
    } else {
      clickFlag = "";
    }

    businessData = {
      titles: titles,
      content: content,
      flagUp: flagUp,
      flagDown: flagDown,
      textName: textName,
      businessTitle: 'custTable',
      clickFlag: clickFlag
    };
    var echartItem = {
      echartData: {
        datas: '',
        titleText: ''
      },
      businessData: businessData
    };
    !!echartItem && echartDatas.push(echartItem);
  }
  return echartDatas;
doAction_uiControl120_FgcMoT: |
  if ('dbClick' == data.eventType) {
    debugger
    var title = data.customData.title;
    var index = data.customData.index;
    var custTable = elem.querySelector('table[id^="store-table"]');

    if (custTable && 'custTable' == title) {
      var trs = custTable.querySelectorAll("tr");

      if (0 == index) {
        var ths = trs && trs[0].querySelectorAll("th");

        if (ths && ths.length) {
          ths && ths[0].click();
        }
      } else {
        var td = trs[index].firstChild;
        var a = td.querySelector("a");

        if (a != null) {
          a.click();
          ysp.appMain.showLoading();
        }
      }
    }
  }
  if ('sortClick' == data.eventType) {
    var title = data.customData.title;
    var index = parseInt(data.customData.index);
    var indexs = index + 1;
    var custTable = elem.querySelector('table[id^="cust-table"]');

    if (custTable && 'custTable' == title) {
      var ths = custTable.querySelector("thead").querySelectorAll("th");

      if (ths && ths.length) {
        if (1 == indexs) {
          ths && ths[indexs].click();
        } else if (2 == indexs) {
          ths && ths[indexs].click();
        }
      }
    }
  }
